<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Appium.Net</name>
    </assembly>
    <members>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.#ctor(OpenQA.Selenium.Remote.ICommandExecutor,OpenQA.Selenium.DriverOptions)">
            <summary>
            Initializes a new instance of the AndroidDriver class
            </summary>
            <param name="commandExecutor">An <see cref="T:OpenQA.Selenium.Remote.ICommandExecutor"/> object which executes commands for the driver.</param>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.#ctor(OpenQA.Selenium.DriverOptions)">
            <summary>
            Initializes a new instance of the AndroidDriver class using Appium options
            </summary>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the Appium options of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.#ctor(OpenQA.Selenium.DriverOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the AndroidDriver class using Appium options and command timeout
            </summary>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumServiceBuilder,OpenQA.Selenium.DriverOptions)">
            <summary>
            Initializes a new instance of the AndroidDriver class using the AppiumServiceBuilder instance and Appium options
            </summary>
            <param name="builder"> object containing settings of the Appium local service which is going to be started</param>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumServiceBuilder,OpenQA.Selenium.DriverOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the AndroidDriver class using the AppiumServiceBuilder instance, Appium options and command timeout
            </summary>
            <param name="builder"> object containing settings of the Appium local service which is going to be started</param>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.#ctor(System.Uri,OpenQA.Selenium.DriverOptions)">
            <summary>
            Initializes a new instance of the AndroidDriver class using the specified remote address and Appium options
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4723/wd/hub).</param>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumLocalService,OpenQA.Selenium.DriverOptions)">
            <summary>
            Initializes a new instance of the AndroidDriver class using the specified Appium local service and Appium options
            </summary>
            <param name="service">the specified Appium local service</param>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.#ctor(System.Uri,OpenQA.Selenium.DriverOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the AndroidDriver class using the specified remote address, Appium options, and command timeout.
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4723/wd/hub).</param>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumLocalService,OpenQA.Selenium.DriverOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the AndroidDriver class using the specified Appium local service, Appium options, and command timeout.
            </summary>
            <param name="service">the specified Appium local service</param>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.OpenNotifications">
            <summary>
            Open the notifications 
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.GetSystemBars">
            <summary>
            Retrieve visibility and bounds information of the status and navigation bars
            </summary>
            <returns>A dictionary whose string keys are named <code>statusBar</code><code>navigationBar</code></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.GetDisplayDensity">
            <summary>
            Retrieve display density(dpi) of the Android device
            </summary>
            <returns>Retrieve display density(dpi) of the Android device</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.Lock">
            This method locks a device.
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.IsLocked">
            <summary>
            Check if the device is locked
            </summary>
            <returns>true if device is locked, false otherwise</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.Unlock">
            This method unlocks a device.
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.EndTestCoverage(System.String,System.String)">
            <summary>
            Get test-coverage data
            </summary>
            <param name="intent">a string containing the intent.</param>
            <param name="path">a string containing the path.</param>
            <return>a base64 string containing the data</return> 
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.SetClipboard(OpenQA.Selenium.Appium.Enums.ClipboardContentType,System.String)">
            <summary>
            Sets the content to the clipboard
            </summary>
            <param name="contentType"></param>
            <param name="base64Content"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.GetClipboard(OpenQA.Selenium.Appium.Enums.ClipboardContentType)">
            <summary>
            Get the content of the clipboard.
            </summary>
            <param name="contentType"></param>
            <remarks>Android supports plaintext only</remarks>
            <returns>The content of the clipboard as base64-encoded string or an empty string if the clipboard is empty</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.SetClipboardText(System.String,System.String)">
            <summary>
            Sets text to the clipboard
            </summary>
            <param name="textContent"></param>
            <param name="label">For Android only - A user visible label for the clipboard content.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.GetClipboardText">
            <summary>
            Get the plaintext content of the clipboard.
            </summary>
            <remarks>Android supports plaintext only</remarks>
            <returns>The string content of the clipboard or an empty string if the clipboard is empty</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.SetClipboardUrl(System.String)">
            <summary>
            Sets the url string to the clipboard
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.GetClipboardUrl">
            <summary>
            Gets the url string from the clipboard
            </summary>
            <returns>The url string content of the clipboard or an empty string if the clipboard is empty</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.SetClipboardImage(System.Drawing.Image)">
            <summary>
            Sets the image to the clipboard
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidDriver`1.GetClipboardImage">
            <summary>
            Gets the image from the clipboard
            </summary>
            <returns>The image content of the clipboard as base64-encoded string or null if there is no image on the clipboard</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidElement.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver,System.String)">
            <summary>
            Initializes a new instance of the AndroidElement class.
            </summary>
            <param name="parent">Driver in use.</param>
            <param name="id">ID of the element.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidStartScreenRecordingOptions.WithBitRate(System.Int32)">
            <summary>
            The video bit rate for the video, in megabits per second.
            The default value is 4000000 (4 Mb/s) for Android API level below 27
            and 20000000 (20 Mb/s) for API level 27 and above.
            You can increase the bit rate to improve video quality,
            but doing so results in larger movie files.
            </summary>
            <param name="bitRate">The actual bit rate (Mb/s).</param>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidStartScreenRecordingOptions.WithVideoSize(System.String)">
            <summary>
            The video size of the generated media file. The format is WIDTHxHEIGHT.
            The default value is the device's native display resolution (if supported),
            1280x720 if not. For best results,
            use a size supported by your device's Advanced Video Coding (AVC) encoder.
            </summary>
            <param name="videoSize">The actual video size: WIDTHxHEIGHT.</param>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidStartScreenRecordingOptions.EnableBugReport">
            <summary>
            Makes the recorder to display an additional information on the video overlay,
            such as a timestamp, that is helpful in videos captured to illustrate bugs.
            This option is only supported since API level 27 (Android P).
            </summary>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.AndroidStartScreenRecordingOptions.WithTimeLimit(System.TimeSpan)">
             <summary>
             The maximum recording time.The default and maximum value is 180 seconds (3 minutes).
             Setting values greater than this or less than zero will cause an exception. The minimum
             time resolution unit is one second.
            
             Since Appium 1.8.2 the time limit can be up to 1800 seconds (30 minutes).
             Appium will automatically try to merge the 3-minutes chunks recorded
             by the screenrecord utility, however, this requires FFMPEG utility
             to be installed and available in PATH on the server machine. If the utility is not
             present then the most recent screen recording chunk is going to be returned as the result.
             </summary>
             <param name="timeLimit">The actual time limit of the recorded video.</param>
             <returns>self instance for chaining.</returns>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.ActionDown">
            <summary>
            getAction() value: the key has been pressed down.
            (0x00000000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.ActionMultiple">
            <summary>
            getAction() value: multiple duplicate key events have occurred in a row, or a complex string is being delivered. If the key code is not {#link Keycode_UNKNOWN then the {#link getRepeatCount() method returns the number of times the given key code should be executed. Otherwise, if the key code is Keycode_UNKNOWN, then this is a sequence of characters as returned by getCharacters().
            (0x00000002)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.ActionUp">
            <summary>
            getAction() value: the key has been released.
            (0x00000001)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.FlagCanceled">
            <summary>
            When associated with up key events, this indicates that the key press has been canceled. Typically this is used with virtual touch screen keys, where the user can slide from the virtual key area on to the display: in that case, the application will receive a canceled up event and should not perform the action normally associated with the key. Note that for this to work, the application can not perform an action for a key until it receives an up or the long press timeout has expired.
            (0x00000020)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.FlagCanceledLongPress">
            <summary>
            Set when a key event has FLAG_CANCELED set because a long press action was executed while it was down.
            (0x00000100)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.FlagEditorAction">
            <summary>
            This mask is used for compatibility, to identify enter keys that are coming from an IME whose enter key has been auto-labelled "next" or "done". This allows TextView to dispatch these as normal enter keys for old applications, but still do the appropriate action when receiving them.
            (0x00000010)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.FlagFallback">
            <summary>
            Set when a key event has been synthesized to implement default behavior for an event that the application did not handle. Fallback key events are generated by unhandled trackball motions (to emulate a directional keypad) and by certain unhandled key presses that are declared in the key map (such as special function numeric keypad keys when numlock is off).
            (0x00000400)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.FlagFromSystem">
            <summary>
            This mask is set if an event was known to come from a trusted part of the system. That is, the event is known to come from the user, and could not have been spoofed by a third party component.
            (0x00000008)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.FlagKeepTouchMode">
            <summary>
            This mask is set if we don't want the key event to cause us to leave touch mode.
            (0x00000004)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.FlagLongPress">
            <summary>
            This flag is set for the first key repeat that occurs after the long press timeout.
            (0x00000080)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.FlagSoftKeyboard">
            <summary>
            This mask is set if the key event was generated by a software keyboard.
            (0x00000002)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.FlagTracking">
            <summary>
            Set for ACTION_UP when this event's key code is still being tracked from its initial down. That is, somebody requested that tracking started on the key down and a long press has not caused the tracking to be canceled.
            (0x00000200)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.FlagVirtualHardKey">
            <summary>
            This key event was generated by a virtual (on-screen) hard key area. Typically this is an area of the touchscreen, outside of the regular display, dedicated to "hardware" buttons.
            (0x00000040)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.FlagWokeHere">
            <summary>
            This constant was deprecated in API level 20.
            This flag will never be set by the system since the system consumes all wake keys itself.
            This mask is set if the device woke because of this key event.
            (0x00000001)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_0">
            <summary>
            Key code constant: '0' key.
            (0x00000007)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_1">
            <summary>
            Key code constant: '1' key.
            (0x00000008)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_11">
            <summary>
            Key code constant: '11' key.
            (0x000000e3)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_12">
            <summary>
            Key code constant: '12' key.
            (0x000000e4)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_2">
            <summary>
            Key code constant: '2' key.
            (0x00000009)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_3">
            <summary>
            Key code constant: '3' key.
            (0x0000000a)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_3D_MODE">
            <summary>
            Key code constant: 3D Mode key. Toggles the display between 2D and 3D mode.
            (0x000000ce)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_4">
            <summary>
            Key code constant: '4' key.
            (0x0000000b)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_5">
            <summary>
            Key code constant: '5' key.
            (0x0000000c)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_6">
            <summary>
            Key code constant: '6' key.
            (0x0000000d)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_7">
            <summary>
            Key code constant: '7' key.
            (0x0000000e)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_8">
            <summary>
            Key code constant: '8' key.
            (0x0000000f)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_9">
            <summary>
            Key code constant: '9' key.
            (0x00000010)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_A">
            <summary>
            Key code constant: 'A' key.
            (0x0000001d)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_ALT_LEFT">
            <summary>
            Key code constant: Left Alt modifier key.
            (0x00000039)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_ALT_RIGHT">
            <summary>
            Key code constant: Right Alt modifier key.
            (0x0000003a)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_APOSTROPHE">
            <summary>
            Key code constant: ''' (apostrophe) key.
            (0x0000004b)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_APP_SWITCH">
            <summary>
            Key code constant: App switch key. Should bring up the application switcher dialog.
            (0x000000bb)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_ASSIST">
            <summary>
            Key code constant: Assist key. Launches the global assist activity. Not delivered to applications.
            (0x000000db)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_AT">
            <summary>
            Key code constant: '@' key.
            (0x0000004d)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_AVR_INPUT">
            <summary>
            Key code constant: A/V Receiver input key. On TV remotes, switches the input mode on an external A/V Receiver.
            (0x000000b6)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_AVR_POWER">
            <summary>
            Key code constant: A/V Receiver power key. On TV remotes, toggles the power on an external A/V Receiver.
            (0x000000b5)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_B">
            <summary>
            Key code constant: 'B' key.
            (0x0000001e)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_BACK">
            <summary>
            Key code constant: Back key.
            (0x00000004)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_BACKSLASH">
            <summary>
            Key code constant: '\' key.
            (0x00000049)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_BOOKMARK">
            <summary>
            Key code constant: Bookmark key. On some TV remotes, bookmarks content or web pages.
            (0x000000ae)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_BREAK">
            <summary>
            Key code constant: Break / Pause key.
            (0x00000079)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_BRIGHTNESS_DOWN">
            <summary>
            Key code constant: Brightness Down key. Adjusts the screen brightness down.
            (0x000000dc)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_BRIGHTNESS_UP">
            <summary>
            Key code constant: Brightness Up key. Adjusts the screen brightness up.
            (0x000000dd)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_1">
            <summary>
            Key code constant: Generic Game Pad Button #1.
            (0x000000bc)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_10">
            <summary>
            Key code constant: Generic Game Pad Button #10.
            (0x000000c5)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_11">
            <summary>
            Key code constant: Generic Game Pad Button #11.
            (0x000000c6)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_12">
            <summary>
            Key code constant: Generic Game Pad Button #12.
            (0x000000c7)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_13">
            <summary>
            Key code constant: Generic Game Pad Button #13.
            (0x000000c8)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_14">
            <summary>
            Key code constant: Generic Game Pad Button #14.
            (0x000000c9)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_15">
            <summary>
            Key code constant: Generic Game Pad Button #15.
            (0x000000ca)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_16">
            <summary>
            Key code constant: Generic Game Pad Button #16.
            (0x000000cb)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_2">
            <summary>
            Key code constant: Generic Game Pad Button #2.
            (0x000000bd)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_3">
            <summary>
            Key code constant: Generic Game Pad Button #3.
            (0x000000be)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_4">
            <summary>
            Key code constant: Generic Game Pad Button #4.
            (0x000000bf)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_5">
            <summary>
            Key code constant: Generic Game Pad Button #5.
            (0x000000c0)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_6">
            <summary>
            Key code constant: Generic Game Pad Button #6.
            (0x000000c1)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_7">
            <summary>
            Key code constant: Generic Game Pad Button #7.
            (0x000000c2)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_8">
            <summary>
            Key code constant: Generic Game Pad Button #8.
            (0x000000c3)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_9">
            <summary>
            Key code constant: Generic Game Pad Button #9.
            (0x000000c4)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_A">
            <summary>
            Key code constant: A Button key. On a game controller, the A button should be either the button labeled A or the first button on the bottom row of controller buttons.
            (0x00000060)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_B">
            <summary>
            Key code constant: B Button key. On a game controller, the B button should be either the button labeled B or the second button on the bottom row of controller buttons.
            (0x00000061)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_C">
            <summary>
            Key code constant: C Button key. On a game controller, the C button should be either the button labeled C or the third button on the bottom row of controller buttons.
            (0x00000062)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_L1">
            <summary>
            Key code constant: L1 Button key. On a game controller, the L1 button should be either the button labeled L1 (or L) or the top left trigger button.
            (0x00000066)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_L2">
            <summary>
            Key code constant: L2 Button key. On a game controller, the L2 button should be either the button labeled L2 or the bottom left trigger button.
            (0x00000068)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_MODE">
            <summary>
            Key code constant: Mode Button key. On a game controller, the button labeled Mode.
            (0x0000006e)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_R1">
            <summary>
            Key code constant: R1 Button key. On a game controller, the R1 button should be either the button labeled R1 (or R) or the top right trigger button.
            (0x00000067)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_R2">
            <summary>
            Key code constant: R2 Button key. On a game controller, the R2 button should be either the button labeled R2 or the bottom right trigger button.
            (0x00000069)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_SELECT">
            <summary>
            Key code constant: Select Button key. On a game controller, the button labeled Select.
            (0x0000006d)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_START">
            <summary>
            Key code constant: Start Button key. On a game controller, the button labeled Start.
            (0x0000006c)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_THUMBL">
            <summary>
            Key code constant: Left Thumb Button key. On a game controller, the left thumb button indicates that the left (or only) joystick is pressed.
            (0x0000006a)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_THUMBR">
            <summary>
            Key code constant: Right Thumb Button key. On a game controller, the right thumb button indicates that the right joystick is pressed.
            (0x0000006b)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_X" -->
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_Y">
            <summary>
            Key code constant: Y Button key. On a game controller, the Y button should be either the button labeled Y or the second button on the upper row of controller buttons.
            (0x00000064)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeButton_Z">
            <summary>
            Key code constant: Z Button key. On a game controller, the Z button should be either the button labeled Z or the third button on the upper row of controller buttons.
            (0x00000065)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_C">
            <summary>
            Key code constant: 'C' key.
            (0x0000001f)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_CALCULATOR">
            <summary>
            Key code constant: Calculator special function key. Used to launch a calculator application.
            (0x000000d2)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_CALENDAR">
            <summary>
            Key code constant: Calendar special function key. Used to launch a calendar application.
            (0x000000d0)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_CALL">
            <summary>
            Key code constant: Call key.
            (0x00000005)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_CAMERA">
            <summary>
            Key code constant: Camera key. Used to launch a camera application or take pictures.
            (0x0000001b)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_CAPS_LOCK">
            <summary>
            Key code constant: Caps Lock key.
            (0x00000073)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_CAPTIONS">
            <summary>
            Key code constant: Toggle captions key. Switches the mode for closed-captioning text, for example during television shows.
            (0x000000af)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_CHANNEL_DOWN">
            <summary>
            Key code constant: Channel down key. On TV remotes, decrements the television channel.
            (0x000000a7)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_CHANNEL_UP">
            <summary>
            Key code constant: Channel up key. On TV remotes, increments the television channel.
            (0x000000a6)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_CLEAR">
            <summary>
            Key code constant: Clear key.
            (0x0000001c)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_COMMA">
            <summary>
            Key code constant: ',' key.
            (0x00000037)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_CONTACTS">
            <summary>
            Key code constant: Contacts special function key. Used to launch an address book application.
            (0x000000cf)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_CTRL_LEFT">
            <summary>
            Key code constant: Left Control modifier key.
            (0x00000071)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_CTRL_RIGHT">
            <summary>
            Key code constant: Right Control modifier key.
            (0x00000072)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_D">
            <summary>
            Key code constant: 'D' key.
            (0x00000020)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_DEL">
            <summary>
            Key code constant: Backspace key. Deletes characters before the insertion popublic static readonly int , unlike Keycode_FORWARD_DEL.
            (0x00000043)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_DPAD_CENTER">
            <summary>
            Key code constant: Directional Pad Center key. May also be synthesized from trackball motions.
            (0x00000017)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_DPAD_DOWN">
            <summary>
            Key code constant: Directional Pad Down key. May also be synthesized from trackball motions.
            (0x00000014)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_DPAD_LEFT">
            <summary>
            Key code constant: Directional Pad Left key. May also be synthesized from trackball motions.
            (0x00000015)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_DPAD_RIGHT">
            <summary>
            Key code constant: Directional Pad Right key. May also be synthesized from trackball motions.
            (0x00000016)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_DPAD_UP">
            <summary>
            Key code constant: Directional Pad Up key. May also be synthesized from trackball motions.
            (0x00000013)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_DVR">
            <summary>
            Key code constant: DVR key. On some TV remotes, switches to a DVR mode for recorded shows.
            (0x000000ad)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_E">
            <summary>
            Key code constant: 'E' key.
            (0x00000021)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_EISU">
            <summary>
            Key code constant: Japanese alphanumeric key.
            (0x000000d4)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_ENDCALL">
            <summary>
            Key code constant: End Call key.
            (0x00000006)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_ENTER">
            <summary>
            Key code constant: Enter key.
            (0x00000042)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_ENVELOPE">
            <summary>
            Key code constant: Envelope special function key. Used to launch a mail application.
            (0x00000041)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_EQUALS">
            <summary>
            Key code constant: '=' key.
            (0x00000046)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_ESCAPE">
            <summary>
            Key code constant: Escape key.
            (0x0000006f)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_EXPLORER">
            <summary>
            Key code constant: Explorer special function key. Used to launch a browser application.
            (0x00000040)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_F">
            <summary>
            Key code constant: 'F' key.
            (0x00000022)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_F1">
            <summary>
            Key code constant: F1 key.
            (0x00000083)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_F10">
            <summary>
            Key code constant: F10 key.
            (0x0000008c)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_F11">
            <summary>
            Key code constant: F11 key.
            (0x0000008d)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_F12">
            <summary>
            Key code constant: F12 key.
            (0x0000008e)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_F2">
            <summary>
            Key code constant: F2 key.
            (0x00000084)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_F3">
            <summary>
            Key code constant: F3 key.
            (0x00000085)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_F4">
            <summary>
            Key code constant: F4 key.
            (0x00000086)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_F5">
            <summary>
            Key code constant: F5 key.
            (0x00000087)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_F6">
            <summary>
            Key code constant: F6 key.
            (0x00000088)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_F7">
            <summary>
            Key code constant: F7 key.
            (0x00000089)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_F8">
            <summary>
            Key code constant: F8 key.
            (0x0000008a)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_F9" -->
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_FOCUS">
            <summary>
            Key code constant: Camera Focus key. Used to focus the camera.
            (0x00000050)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_FORWARD">
            <summary>
            Key code constant: Forward key. Navigates forward in the history stack. Complement of Keycode_BACK.
            (0x0000007d)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_FORWARD_DEL">
            <summary>
            Key code constant: Forward Delete key. Deletes characters ahead of the insertion popublic static readonly int , unlike Keycode_DEL.
            (0x00000070)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_FUNCTION">
            <summary>
            Key code constant: Function modifier key.
            (0x00000077)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_G">
            <summary>
            Key code constant: 'G' key.
            (0x00000023)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_GRAVE">
            <summary>
            Key code constant: '`' (backtick) key.
            (0x00000044)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_GUIDE">
            <summary>
            Key code constant: Guide key. On TV remotes, shows a programming guide.
            (0x000000ac)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_H">
            <summary>
            Key code constant: 'H' key.
            (0x00000024)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_HEADSETHOOK">
            <summary>
            Key code constant: Headset Hook key. Used to hang up calls and stop media.
            (0x0000004f)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_HELP">
            <summary>
            Key code constant: Help key.
            (0x00000103)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_HENKAN">
            <summary>
            Key code constant: Japanese conversion key.
            (0x000000d6)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_HOME">
            <summary>
            Key code constant: Home key. This key is handled by the framework and is never delivered to applications.
            (0x00000003)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_I">
            <summary>
            Key code constant: 'I' key.
            (0x00000025)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_INFO">
            <summary>
            Key code constant: Info key. Common on TV remotes to show additional information related to what is currently being viewed.
            (0x000000a5)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_INSERT">
            <summary>
            Key code constant: Insert key. Toggles insert / overwrite edit mode.
            (0x0000007c)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_J">
            <summary>
            Key code constant: 'J' key.
            (0x00000026)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_K">
            <summary>
            Key code constant: 'K' key.
            (0x00000027)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_KANA">
            <summary>
            Key code constant: Japanese kana key.
            (0x000000da)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_KATAKANA_HIRAGANA">
            <summary>
            Key code constant: Japanese katakana / hiragana key.
            (0x000000d7)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_L">
            <summary>
            Key code constant: 'L' key.
            (0x00000028)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_LANGUAGE_SWITCH">
            <summary>
            Key code constant: Language Switch key. Toggles the current input language such as switching between English and Japanese on a QWERTY keyboard. On some devices, the same function may be performed by pressing Shift+Spacebar.
            (0x000000cc)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_LAST_CHANNEL">
            <summary>
            Key code constant: Last Channel key. Goes to the last viewed channel.
            (0x000000e5)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_LEFT_BRACKET">
            <summary>
            Key code constant: '[' key.
            (0x00000047)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_M">
            <summary>
            Key code constant: 'M' key.
            (0x00000029)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MANNER_MODE">
            <summary>
            Key code constant: Manner Mode key. Toggles silent or vibrate mode on and off to make the device behave more politely in certain settings such as on a crowded train. On some devices, the key may only operate when long-pressed.
            (0x000000cd)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MEDIA_AUDIO_TRACK">
            <summary>
            Key code constant: Audio Track key. Switches the audio tracks.
            (0x000000de)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MEDIA_CLOSE">
            <summary>
            Key code constant: Close media key. May be used to close a CD tray, for example.
            (0x00000080)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MEDIA_EJECT">
            <summary>
            Key code constant: Eject media key. May be used to eject a CD tray, for example.
            (0x00000081)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MEDIA_FAST_FORWARD">
            <summary>
            Key code constant: Fast Forward media key.
            (0x0000005a)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MEDIA_NEXT">
            <summary>
            Key code constant: Play Next media key.
            (0x00000057)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MEDIA_PAUSE">
            <summary>
            Key code constant: Pause media key.
            (0x0000007f)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MEDIA_PLAY">
            <summary>
            Key code constant: Play media key.
            (0x0000007e)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MEDIA_PLAY_PAUSE">
            <summary>
            Key code constant: Play/Pause media key.
            (0x00000055)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MEDIA_PREVIOUS">
            <summary>
            Key code constant: Play Previous media key.
            (0x00000058)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MEDIA_RECORD">
            <summary>
            Key code constant: Record media key.
            (0x00000082)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MEDIA_REWIND">
            <summary>
            Key code constant: Rewind media key.
            (0x00000059)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MEDIA_STOP">
            <summary>
            Key code constant: Stop media key.
            (0x00000056)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MEDIA_TOP_MENU">
            <summary>
            Key code constant: Media Top Menu key. Goes to the top of media menu.
            (0x000000e2)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MENU">
            <summary>
            Key code constant: Menu key.
            (0x00000052)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_META_LEFT">
            <summary>
            Key code constant: Left Meta modifier key.
            (0x00000075)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_META_RIGHT">
            <summary>
            Key code constant: Right Meta modifier key.
            (0x00000076)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MINUS">
            <summary>
            Key code constant: '-'.
            (0x00000045)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MOVE_END">
            <summary>
            Key code constant: End Movement key. Used for scrolling or moving the cursor around to the end of a line or to the bottom of a list.
            (0x0000007b)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MOVE_HOME">
            <summary>
            Key code constant: Home Movement key. Used for scrolling or moving the cursor around to the start of a line or to the top of a list.
            (0x0000007a)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MUHENKAN">
            <summary>
            Key code constant: Japanese non-conversion key.
            (0x000000d5)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MUSIC">
            <summary>
            Key code constant: Music special function key. Used to launch a music player application.
            (0x000000d1)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MUTE">
            <summary>
            Key code constant: Mute key. Mutes the microphone, unlike Keycode_VOLUME_MUTE.
            (0x0000005b)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_N">
            <summary>
            Key code constant: 'N' key.
            (0x0000002a)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_NOTIFICATION">
            <summary>
            Key code constant: Notification key.
            (0x00000053)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_NUM" -->
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_0">
            <summary>
            Key code constant: Numeric keypad '0' key.
            (0x00000090)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_1">
            <summary>
            Key code constant: Numeric keypad '1' key.
            (0x00000091)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_2">
            <summary>
            Key code constant: Numeric keypad '2' key.
            (0x00000092)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_3">
            <summary>
            Key code constant: Numeric keypad '3' key.
            (0x00000093)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_4">
            <summary>
            Key code constant: Numeric keypad '4' key.
            (0x00000094)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_5">
            <summary>
            Key code constant: Numeric keypad '5' key.
            (0x00000095)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_6">
            <summary>
            Key code constant: Numeric keypad '6' key.
            (0x00000096)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_7">
            <summary>
            Key code constant: Numeric keypad '7' key.
            (0x00000097)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_8">
            <summary>
            Key code constant: Numeric keypad '8' key.
            (0x00000098)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_9">
            <summary>
            Key code constant: Numeric keypad '9' key.
            (0x00000099)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_ADD">
            <summary>
            Key code constant: Numeric keypad '+' key (for addition).
            (0x0000009d)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_COMMA">
            <summary>
            Key code constant: Numeric keypad ',' key (for decimals or digit grouping).
            (0x0000009f)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_DIVIDE">
            <summary>
            Key code constant: Numeric keypad '/' key (for division).
            (0x0000009a)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_DOT">
            <summary>
            Key code constant: Numeric keypad '.' key (for decimals or digit grouping).
            (0x0000009e)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_ENTER">
            <summary>
            Key code constant: Numeric keypad Enter key.
            (0x000000a0)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_EQUALS">
            <summary>
            Key code constant: Numeric keypad '=' key.
            (0x000000a1)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_LEFT_PAREN">
            <summary>
            Key code constant: Numeric keypad '(' key.
            (0x000000a2)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_MULTIPLY">
            <summary>
            Key code constant: Numeric keypad '*' key (for multiplication).
            (0x0000009b)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_RIGHT_PAREN">
            <summary>
            Key code constant: Numeric keypad ')' key.
            (0x000000a3)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeNumpad_SUBTRACT" -->
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_NUM_LOCK">
            <summary>
            Key code constant: Num Lock key. This is the Num Lock key; it is different from Keycode_NUM. This key alters the behavior of other keys on the numeric keypad.
            (0x0000008f)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_O">
            <summary>
            Key code constant: 'O' key.
            (0x0000002b)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_P">
            <summary>
            Key code constant: 'P' key.
            (0x0000002c)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_PAGE_DOWN">
            <summary>
            Key code constant: Page Down key.
            (0x0000005d)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_PAGE_UP">
            <summary>
            Key code constant: Page Up key.
            (0x0000005c)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_PAIRING">
            <summary>
            Key code constant: Pairing key. Initiates peripheral pairing mode. Useful for pairing remote control devices or game controllers, especially if no other input mode is available.
            (0x000000e1)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_PERIOD">
            <summary>
            Key code constant: '.' key.
            (0x00000038)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_PICTSYMBOLS">
            <summary>
            Key code constant: Picture Symbols modifier key. Used to switch symbol sets (Emoji, Kao-moji).
            (0x0000005e)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_PLUS">
            <summary>
            Key code constant: '+' key.
            (0x00000051)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_POUND">
            <summary>
            Key code constant: '#' key.
            (0x00000012)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_POWER">
            <summary>
            Key code constant: Power key.
            (0x0000001a)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_PROG_BLUE">
            <summary>
            Key code constant: Blue "programmable" key. On TV remotes, acts as a contextual/programmable key.
            (0x000000ba)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_PROG_GREEN">
            <summary>
            Key code constant: Green "programmable" key. On TV remotes, actsas a contextual/programmable key.
            (0x000000b8)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_PROG_RED">
            <summary>
            Key code constant: Red "programmable" key. On TV remotes, acts as a contextual/programmable key.
            (0x000000b7)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_PROG_YELLOW">
            <summary>
            Key code constant: Yellow "programmable" key. On TV remotes, acts as a contextual/programmable key.
            (0x000000b9)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_Q">
            <summary>
            Key code constant: 'Q' key.
            (0x0000002d)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_R">
            <summary>
            Key code constant: 'R' key.
            (0x0000002e)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_RIGHT_BRACKET">
            <summary>
            Key code constant: ']' key.
            (0x00000048)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_RO">
            <summary>
            Key code constant: Japanese Ro key.
            (0x000000d9)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_S">
            <summary>
            Key code constant: 'S' key.
            (0x0000002f)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_SCROLL_LOCK">
            <summary>
            Key code constant: Scroll Lock key.
            (0x00000074)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_SEARCH">
            <summary>
            Key code constant: Search key.
            (0x00000054)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_SEMICOLON">
            <summary>
            Key code constant: ';' key.
            (0x0000004a)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_SETTINGS">
            <summary>
            Key code constant: Settings key. Starts the system settings activity.
            (0x000000b0)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_SHIFT_LEFT">
            <summary>
            Key code constant: Left Shift modifier key.
            (0x0000003b)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_SHIFT_RIGHT">
            <summary>
            Key code constant: Right Shift modifier key.
            (0x0000003c)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_SLASH">
            <summary>
            Key code constant: '/' key.
            (0x0000004c)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_SLEEP">
            <summary>
            Key code constant: Sleep key. Puts the device to sleep. Behaves somewhat like Keycode_POWER but it has no effect if the device is already asleep.
            (0x000000df)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeSoft_LEFT">
            <summary>
            Key code constant: Soft Left key. Usually situated below the display on phones and used as a multi-function feature key for selecting a software defined function shown on the bottom left of the display.
            (0x00000001)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeSoft_RIGHT">
            <summary>
            Key code constant: Soft Right key. Usually situated below the display on phones and used as a multi-function feature key for selecting a software defined function shown on the bottom right of the display.
            (0x00000002)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_SPACE">
            <summary>
            Key code constant: Space key.
            (0x0000003e)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_STAR">
            <summary>
            Key code constant: '*' key.
            (0x00000011)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeSTB_INPUT">
            <summary>
            Key code constant: Set-top-box input key. On TV remotes, switches the input mode on an external Set-top-box.
            (0x000000b4)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeSTB_POWER">
            <summary>
            Key code constant: Set-top-box power key. On TV remotes, toggles the power on an external Set-top-box.
            (0x000000b3)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_SWITCH_CHARSET">
            <summary>
            Key code constant: Switch Charset modifier key. Used to switch character sets (Kanji, Katakana).
            (0x0000005f)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_SYM">
            <summary>
            Key code constant: Symbol modifier key. Used to enter alternate symbols.
            (0x0000003f)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_SYSRQ">
            <summary>
            Key code constant: System Request / Prpublic static readonly int  Screen key.
            (0x00000078)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_T">
            <summary>
            Key code constant: 'T' key.
            (0x00000030)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_TAB">
            <summary>
            Key code constant: Tab key.
            (0x0000003d)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_TV">
            <summary>
            Key code constant: TV key. On TV remotes, switches to viewing live TV.
            (0x0000000aa)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_ANTENNA_CABLE">
            <summary>
            Key code constant: Antenna/Cable key. Toggles broadcast input source between antenna and cable.
            (0x000000f2)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_AUDIO_DESCRIPTION">
            <summary>
            Key code constant: Audio description key. Toggles audio description off / on.
            (0x000000fc)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_AUDIO_DESCRIPTION_MIX_DOWN">
            <summary>
            Key code constant: Audio description mixing volume down key. Lessen audio description volume as compared with normal audio volume.
            (0x000000fe)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_AUDIO_DESCRIPTION_MIX_UP">
            <summary>
            Key code constant: Audio description mixing volume up key. Louden audio description volume as compared with normal audio volume.
            (0x000000fd)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_CONTENTS_MENU">
            <summary>
            Key code constant: Contents menu key. Goes to the title list. Corresponds to Contents Menu (0x0B) of CEC User Control Code
            (0x00000100)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_DATA_SERVICE">
            <summary>
            Key code constant: TV data service key. Displays data services like weather, sports.
            (0x000000e6)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_INPUT">
            <summary>
            Key code constant: TV input key. On TV remotes, switches the input on a television screen.
            (0x000000b2)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_INPUT_COMPONENT_1">
            <summary>
            Key code constant: Component #1 key. Switches to component video input #1.
            (0x000000f9)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_INPUT_COMPONENT_2">
            <summary>
            Key code constant: Component #2 key. Switches to component video input #2.
            (0x000000fa)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_INPUT_COMPOSITE_1">
            <summary>
            Key code constant: Composite #1 key. Switches to composite video input #1.
            (0x000000f7)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_INPUT_COMPOSITE_2">
            <summary>
            Key code constant: Composite #2 key. Switches to composite video input #2.
            (0x000000f8)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_INPUT_HDMI_1">
            <summary>
            Key code constant: HDMI #1 key. Switches to HDMI input #1.
            (0x000000f3)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_INPUT_HDMI_2">
            <summary>
            Key code constant: HDMI #2 key. Switches to HDMI input #2.
            (0x000000f4)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_INPUT_HDMI_3">
            <summary>
            Key code constant: HDMI #3 key. Switches to HDMI input #3.
            (0x000000f5)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_INPUT_HDMI_4">
            <summary>
            Key code constant: HDMI #4 key. Switches to HDMI input #4.
            (0x000000f6)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_INPUT_VGA_1">
            <summary>
            Key code constant: VGA #1 key. Switches to VGA (analog RGB) input #1.
            (0x000000fb)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_MEDIA_CONTEXT_MENU">
            <summary>
            Key code constant: Media context menu key. Goes to the context menu of media contents. Corresponds to Media Context-sensitive Menu (0x11) of CEC User Control Code.
            (0x00000101)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_NETWORK">
            <summary>
            Key code constant: Toggle Network key. Toggles selecting broacast services.
            (0x000000f1)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_NUMBER_ENTRY">
            <summary>
            Key code constant: Number entry key. Initiates to enter multi-digit channel nubmber when each digit key is assigned for selecting separate channel. Corresponds to Number Entry Mode (0x1D) of CEC User Control Code.
            (0x000000ea)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_POWER">
            <summary>
            Key code constant: TV power key. On TV remotes, toggles the power on a television screen.
            (0x000000b1)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_RADIO_SERVICE">
            <summary>
            Key code constant: Radio key. Toggles TV service / Radio service.
            (0x000000e8)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_SATELLITE">
            <summary>
            Key code constant: Satellite key. Switches to digital satellite broadcast service.
            (0x000000ed)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_SATELLITE_BS">
            <summary>
            Key code constant: BS key. Switches to BS digital satellite broadcasting service available in Japan.
            (0x000000ee)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_SATELLITE_CS">
            <summary>
            Key code constant: CS key. Switches to CS digital satellite broadcasting service available in Japan.
            (0x000000ef)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_SATELLITE_SERVICE">
            <summary>
            Key code constant: BS/CS key. Toggles between BS and CS digital satellite services.
            (0x000000f0)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_TELETEXT">
            <summary>
            Key code constant: Teletext key. Displays Teletext service.
            (0x000000e9)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_TERRESTRIAL_ANALOG">
            <summary>
            Key code constant: Analog Terrestrial key. Switches to analog terrestrial broadcast service.
            (0x000000eb)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_TERRESTRIAL_DIGITAL">
            <summary>
            Key code constant: Digital Terrestrial key. Switches to digital terrestrial broadcast service.
            (0x000000ec)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_TIMER_PROGRAMMING">
            <summary>
            Key code constant: Timer programming key. Goes to the timer recording menu. Corresponds to Timer Programming (0x54) of CEC User Control Code.
            (0x00000102)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.KeycodeTV_ZOOM_MODE">
            <summary>
            Key code constant: Zoom mode key. Changes Zoom mode (Normal, Full, Zoom, Wide-zoom, etc.)
            (0x000000ff)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_U">
            <summary>
            Key code constant: 'U' key.
            (0x00000031)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_UNKNOWN">
            <summary>
            Key code constant: Unknown key code.
            (0x00000000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_V">
            <summary>
            Key code constant: 'V' key.
            (0x00000032)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_VOICE_ASSIST">
            <summary>
            Key code constant: Voice Assist key. Launches the global voice assist activity. Not delivered to applications.
            (0x000000e7)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_VOLUME_DOWN">
            <summary>
            Key code constant: Volume Down key. Adjusts the speaker volume down.
            (0x00000019)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_VOLUME_MUTE">
            <summary>
            Key code constant: Volume Mute key. Mutes the speaker, unlike Keycode_MUTE. This key should normally be implemented as a toggle such that the first press mutes the speaker and the second press restores the original volume.
            (0x000000a4)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_VOLUME_UP">
            <summary>
            Key code constant: Volume Up key. Adjusts the speaker volume up.
            (0x00000018)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_W">
            <summary>
            Key code constant: 'W' key.
            (0x00000033)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_WAKEUP">
            <summary>
            Key code constant: Wakeup key. Wakes up the device. Behaves somewhat like Keycode_POWER but it has no effect if the device is already awake.
            (0x000000e0)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_WINDOW">
            <summary>
            Key code constant: Window key. On TV remotes, toggles picture-in-picture mode or other windowing functions.
            (0x000000ab)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_X">
            <summary>
            Key code constant: 'X' key.
            (0x00000034)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_Y">
            <summary>
            Key code constant: 'Y' key.
            (0x00000035)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_YEN">
            <summary>
            Key code constant: Japanese Yen key.
            (0x000000d8)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_Z">
            <summary>
            Key code constant: 'Z' key.
            (0x00000036)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_ZENKAKU_HANKAKU">
            <summary>
            Key code constant: Japanese full-width / half-width key.
            (0x000000d3)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_ZOOM_IN">
            <summary>
            Key code constant: Zoom in key.
            (0x000000a8)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_ZOOM_OUT">
            <summary>
            Key code constant: Zoom out key.
            (0x000000a9)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.Keycode_MAX">
            <summary>
            This constant was deprecated in API level 3.
            There are now more than MAX_KEYCODE keycodes. Use getMaxKeyCode() instead.
            (0x00000054)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaAlt_LEFT_ON">
            <summary>
            This mask is used to check whether the left ALT meta key is pressed.
            See Also
            isAltPressed()
            getMetaState()
            Keycode_ALT_LEFT
            (0x00000010)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaAlt_MASK">
            <summary>
            This mask is a combination of META_ALT_ON, META_ALT_LEFT_ON and META_ALT_RIGHT_ON.
            (0x00000032)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaAlt_ON">
            <summary>
            This mask is used to check whether one of the ALT meta keys is pressed.
            See Also
            isAltPressed()
            getMetaState()
            Keycode_ALT_LEFT
            Keycode_ALT_RIGHT
            (0x00000002)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaAlt_RIGHT_ON">
            <summary>
            This mask is used to check whether the right the ALT meta key is pressed.
            See Also
            isAltPressed()
            getMetaState()
            Keycode_ALT_RIGHT
            (0x00000020)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaCaps_LOCK_ON">
            <summary>
            This mask is used to check whether the CAPS LOCK meta key is on.
            See Also
            isCapsLockOn()
            getMetaState()
            Keycode_CAPS_LOCK
            (0x00100000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaCtrl_LEFT_ON">
            <summary>
            This mask is used to check whether the left CTRL meta key is pressed.
            See Also
            isCtrlPressed()
            getMetaState()
            Keycode_CTRL_LEFT
            (0x00002000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaCtrl_MASK">
            <summary>
            This mask is a combination of META_CTRL_ON, META_CTRL_LEFT_ON and META_CTRL_RIGHT_ON.
            (0x00007000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaCtrl_ON">
            <summary>
            This mask is used to check whether one of the CTRL meta keys is pressed.
            See Also
            isCtrlPressed()
            getMetaState()
            Keycode_CTRL_LEFT
            Keycode_CTRL_RIGHT
            (0x00001000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaCtrl_RIGHT_ON">
            <summary>
            This mask is used to check whether the right CTRL meta key is pressed.
            See Also
            isCtrlPressed()
            getMetaState()
            Keycode_CTRL_RIGHT
            (0x00004000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaFunction_ON">
            <summary>
            This mask is used to check whether the FUNCTION meta key is pressed.
            See Also
            isFunctionPressed()
            getMetaState()
            (0x00000008)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaMeta_LEFT_ON">
            <summary>
            This mask is used to check whether the left META meta key is pressed.
            See Also
            isMetaPressed()
            getMetaState()
            Keycode_META_LEFT
            (0x00020000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaMeta_MASK">
            <summary>
            This mask is a combination of META_META_ON, META_META_LEFT_ON and META_META_RIGHT_ON.
            (0x00070000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaMeta_ON">
            <summary>
            This mask is used to check whether one of the META meta keys is pressed.
            See Also
            isMetaPressed()
            getMetaState()
            Keycode_META_LEFT
            Keycode_META_RIGHT
            (0x00010000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaMeta_RIGHT_ON">
            <summary>
            This mask is used to check whether the right META meta key is pressed.
            See Also
            isMetaPressed()
            getMetaState()
            Keycode_META_RIGHT
            (0x00040000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaNum_LOCK_ON">
            <summary>
            This mask is used to check whether the NUM LOCK meta key is on.
            See Also
            isNumLockOn()
            getMetaState()
            Keycode_NUM_LOCK
            (0x00200000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaScroll_LOCK_ON">
            <summary>
            This mask is used to check whether the SCROLL LOCK meta key is on.
            See Also
            isScrollLockOn()
            getMetaState()
            Keycode_SCROLL_LOCK
            (0x00400000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaShift_LEFT_ON">
            <summary>
            This mask is used to check whether the left SHIFT meta key is pressed.
            See Also
            isShiftPressed()
            getMetaState()
            Keycode_SHIFT_LEFT
            (0x00000040)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaShift_MASK">
            <summary>
            This mask is a combination of META_SHIFT_ON, META_SHIFT_LEFT_ON and META_SHIFT_RIGHT_ON.
            (0x000000c1)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaShift_ON">
            <summary>
            This mask is used to check whether one of the SHIFT meta keys is pressed.
            See Also
            isShiftPressed()
            getMetaState()
            Keycode_SHIFT_LEFT
            Keycode_SHIFT_RIGHT
            (0x00000001)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaShift_RIGHT_ON">
            <summary>
            This mask is used to check whether the right SHIFT meta key is pressed.
            See Also
            isShiftPressed()
            getMetaState()
            Keycode_SHIFT_RIGHT
            (0x00000080)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Android.AndroidKeyCode.MetaSym_ON">
            <summary>
            This mask is used to check whether the SYM meta key is pressed.
            See Also
            isSymPressed()
            getMetaState()
            (0x00000004)
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Android.ConnectionType">
            <summary>
            Connection Type as described in the JSON Wire Protocol
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Android.Interfaces.IHasNetworkConnection.ConnectionType">
            <summary>
            Get/set the Connection Type
            </summary>
            <returns>Connection Type of device</returns>
            <exception cref="T:System.InvalidCastException">Thrown when object return was not able to be converted to a ConnectionType Enum</exception>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasPerformanceData.GetPerformanceData(System.String,System.String)">
            <summary>
            Returns the information of the system state which is supported to read e.g. cpu, memory, network
            </summary>
            <param name="packageName">The package name of the application</param>
            <param name="performanceDataType">The type of system state which you want to read, use <see cref="T:OpenQA.Selenium.Appium.Android.Enums.PerformanceDataType"/>
            or call <see cref="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasPerformanceData.GetPerformanceDataTypes"/> to find a list of the supported performance data types.</param>
            <returns>
            A table like list of the performance data, The first index of the table represents the type of data.
            The remaining index represent the values of the data.
                   in case of battery info : [[power], [23]]
                   in case of memory info :
                        [[totalPrivateDirty, nativePrivateDirty, dalvikPrivateDirty, eglPrivateDirty, glPrivateDirty,
                                  totalPss, nativePss, dalvikPss, eglPss, glPss, nativeHeapAllocatedSize, nativeHeapSize],
                                 [18360, 8296, 6132, null, null, 42588, 8406, 7024, null, null, 26519, 10344]]
                   in case of network info :
                       [[bucketStart, activeTime, rxBytes, rxPackets, txBytes, txPackets, operations, bucketDuration,],
                                 [1478091600000, null, 1099075, 610947, 928, 114362, 769, 0, 3600000],
                                 [1478095200000, null, 1306300, 405997, 509, 46359, 370, 0, 3600000]]
                   in case of network info :
                       [[st, activeTime, rb, rp, tb, tp, op, bucketDuration],
                                  [1478088000, null, null, 32115296, 34291, 2956805, 25705, 0, 3600],
                                 [1478091600, null, null, 2714683, 11821, 1420564, 12650, 0, 3600],
                                 [1478095200, null, null, 10079213, 19962, 2487705, 20015, 0, 3600],
                                 [1478098800, null, null, 4444433, 10227, 1430356, 10493, 0, 3600]]
                   in case of cpu info : [[user, kernel], [0.9, 1.3]]
            </returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasPerformanceData.GetPerformanceData(System.String,System.String,System.Int32)">
            <summary>
            Returns the information of the system state which is supported to read e.g. cpu, memory, network
            </summary>
            <param name="packageName">The package name of the application</param>
            <param name="performanceDataType">The type of system state which you want to read, use <see cref="T:OpenQA.Selenium.Appium.Android.Enums.PerformanceDataType"/>
            or call <see cref="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasPerformanceData.GetPerformanceDataTypes"/> to find a list of the supported performance data types.</param>
            <param name="dataReadAttempts">The number of attempts to read data in the event of a data read failure (optional). Value must be greater than 0.</param>
            <returns>
            A table like list of the performance data, The first index of the table represents the type of data.
            The remaining index represent the values of the data.
                   in case of battery info : [[power], [23]]
                   in case of memory info :
                        [[totalPrivateDirty, nativePrivateDirty, dalvikPrivateDirty, eglPrivateDirty, glPrivateDirty,
                                  totalPss, nativePss, dalvikPss, eglPss, glPss, nativeHeapAllocatedSize, nativeHeapSize],
                                 [18360, 8296, 6132, null, null, 42588, 8406, 7024, null, null, 26519, 10344]]
                   in case of network info :
                       [[bucketStart, activeTime, rxBytes, rxPackets, txBytes, txPackets, operations, bucketDuration,],
                                 [1478091600000, null, 1099075, 610947, 928, 114362, 769, 0, 3600000],
                                 [1478095200000, null, 1306300, 405997, 509, 46359, 370, 0, 3600000]]
                   in case of network info :
                       [[st, activeTime, rb, rp, tb, tp, op, bucketDuration],
                                  [1478088000, null, null, 32115296, 34291, 2956805, 25705, 0, 3600],
                                 [1478091600, null, null, 2714683, 11821, 1420564, 12650, 0, 3600],
                                 [1478095200, null, null, 10079213, 19962, 2487705, 20015, 0, 3600],
                                 [1478098800, null, null, 4444433, 10227, 1430356, 10493, 0, 3600]]
                   in case of cpu info : [[user, kernel], [0.9, 1.3]]
            </returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasPerformanceData.GetPerformanceDataTypes">
            <summary>
            Returns the information types of the system state which is supported to read as like cpu, memory, network traffic, and battery
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasSettings.SetSetting(System.String,System.Object)">
            <summary>
            Set a setting for this test session It's probably better to use a
            convenience function, rather than use this function directly. Try finding
            the method for the specific setting you want to change.
            </summary>
            <param name="setting">Setting you wish to set.</param>
            <param name="value">value of the setting.</param>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Android.Interfaces.IHasSettings.Settings">
            <summary>
            Gets/Sets settings stored for this test session.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasSettings.IgnoreUnimportantViews(System.Boolean)">
            <summary>
             Set the `ignoreUnimportantViews` setting. * Android-only method*.
             Sets whether Android devices should use `setCompressedLayoutHeirarchy()`
             which ignores all views which are marked IMPORTANT_FOR_ACCESSIBILITY_NO
             or IMPORTANT_FOR_ACCESSIBILITY_AUTO(and have been deemed not important
             by the system), in an attempt to make things less confusing or faster.
            </summary>
            <param name="compress">ignores unimportant views if true, doesn't ignore otherwise.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasSettings.ConfiguratorSetWaitForIdleTimeout(System.Int32)">
            <summary>
            invoke {@code setWaitForIdleTimeout} in {@code com.android.uiautomator.core.Configurator}
            </summary>
            <param name="timeout">timeout in milliseconds. A negative value would reset to its default value</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasSettings.ConfiguratorSetWaitForSelectorTimeout(System.Int32)">
            <summary>
            invoke {@code setWaitForSelectorTimeout} in {@code com.android.uiautomator.core.Configurator}
            </summary>
            <param name="timeout">timeout in milliseconds. A negative value would reset to its default value</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasSettings.ConfiguratorSetScrollAcknowledgmentTimeout(System.Int32)">
            <summary>
            invoke {@code setScrollAcknowledgmentTimeout} in {@code com.android.uiautomator.core.Configurator}
            </summary>
            <param name="timeout">timeout in milliseconds. A negative value would reset to its default value</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasSettings.ConfiguratorSetKeyInjectionDelay(System.Int32)">
            <summary>
            invoke {@code configuratorSetKeyInjectionDelay} in {@code com.android.uiautomator.core.Configurator}
            </summary>
            <param name="delay">delay in milliseconds. A negative value would reset to its default value</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasSettings.ConfiguratorSetActionAcknowledgmentTimeout(System.Int32)">
            <summary>
            invoke {@code setActionAcknowledgmentTimeout} in {@code com.android.uiautomator.core.Configurator}
            </summary>
            <param name="timeout">timeout in milliseconds. A negative value would reset to its default value</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.Interfaces.IPushesFiles.PushFile(System.String,System.String)">
            <summary>
            Saves a string as a file on the remote mobile device.
            </summary>
            <param name="pathOnDevice">Path to file to write data to on remote device</param>
            <param name="stringData">A string to write to remote device</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.Interfaces.IPushesFiles.PushFile(System.String,System.Byte[])">
            <summary>
            Saves base64 encoded data as a file on the remote mobile device.
            </summary>
            <param name="pathOnDevice">Path to file to write data to on remote device</param>
            <param name="base64Data">Base64 encoded byte array of data to write to remote device</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.Interfaces.IPushesFiles.PushFile(System.String,System.IO.FileInfo)">
            <summary>
            Saves given file as a file on the remote mobile device.
            </summary>
            <param name="pathOnDevice">Path to file to write data to on remote device</param>
            <param name="base64Data">A file to write to remote device</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.IStartsActivity.StartActivity(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Opens an arbitrary activity during a test. If the activity belongs to
            another application, that application is started and the activity is opened.
            
            </summary>
            <param name="appPackage">The package containing the activity to start.</param>
            <param name="appActivity">The activity to start.</param>
            <param name="appWaitPackage">Begin automation after this package starts. Can be null or empty.</param>
            <param name="appWaitActivity">Begin automation after this activity starts. Can be null or empty.</param>
            <param name="stopApp">If true, target app will be stopped.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.IStartsActivity.StartActivityWithIntent(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Opens an arbitrary activity during a test. If the activity belongs to
            another application, that application is started and the activity is opened.
            
            </summary>
            <param name="appPackage">The package containing the activity to start.</param>
            <param name="appActivity">The activity to start.</param>
            <param name="intentAction">Intent action which will be used to start activity.</param>
            <param name="appWaitPackage">Begin automation after this package starts. Can be null or empty.</param>
            <param name="appWaitActivity">Begin automation after this activity starts. Can be null or empty.</param>
            <param name="intentCategory">Intent category which will be used to start activity.</param>
            <param name="intentFlags">Flags that will be used to start activity.</param>
            <param name="intentOptionalArgs">Additional intent arguments that will be used to start activity.</param>
            <param name="stopApp">If true, target app will be stopped.</param>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Android.IStartsActivity.CurrentActivity">
            <summary>
            Gets Current Device Activity.
            </summary>
            
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.KeyEvent.#ctor(System.Int32)">
            <summary>
            Creates a new key event
            </summary>
            <param name="keyCode">The key code. This is mandatory</param>
            <see cref="T:OpenQA.Selenium.Appium.Android.AndroidKeyCode"/>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.KeyEvent.WithKeyCode(System.Int32)">
            <summary>
            Sets the key code.
            This is mandatory.
            </summary>
            <param name="keyCode">The key code</param>
            <see cref="T:OpenQA.Selenium.Appium.Android.AndroidKeyCode"/>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.KeyEvent.WithMetaKeyModifier(System.Int32)">
            <summary>
            Adds the meta key modifier
            Flags indicating which meta keys are currently pressed.
            Multiple meta key modifier flags can be combined into a single key event
            </summary>
            <param name="keyEventMetaModifier">The meta state</param>
            <see cref="T:OpenQA.Selenium.Appium.Android.Enums.AndroidKeyMetastate"/>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.KeyEvent.WithFlag(System.Int32)">
            <summary>
            Adds the flag(s).
            Multiple flags can be combined into a single key event
            </summary>
            <param name="flag">The flag</param>
            <see cref="T:OpenQA.Selenium.Appium.Android.AndroidKeyCode"/>
            <returns></returns>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable">
            <summary>
            A convenience class to wrap Android UiScrollable method calls.
            </summary>
            <remarks>
            Docs: https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.#ctor">
            <summary>
            Creates a new scrollable searcher which will match the first scrollable widget
            in the view.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.#ctor(OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector)">
            <summary>
            Creates a new scrollable searcher which will match the first widget
            which matches the given UISelector.
            </summary>
            <param name="uiSelector">
            A UiSelector that will be used to find the scrollable container
            </param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.FlingBackward">
            <summary>
            Performs a backwards fling action with the default number of fling steps (5). If the swipe direction
            is set to vertical, then the swipe will be performed from top to bottom. If the swipe direction is set
            to horizontal, then the swipes will be performed from left to right. Make sure to take into account
            devices configured with right-to-left languages like Arabic and Hebrew.
            Maps to the UiScrollable.flingBackward() method.
            </summary>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#flingbackward</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.FlingForward">
            <summary>
            Performs a forward fling with the default number of fling steps (5). If the swipe direction is set
            to vertical, then the swipes will be performed from bottom to top. If the swipe direction is set to
            horizontal, then the swipes will be performed from right to left. Make sure to take into account
            devices configured with right-to-left languages like Arabic and Hebrew.
            Maps to the UiScrollable.flingForward() method.
            </summary>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#flingforward</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.FlingToBeginning(System.Int32)">
            <summary>
            Performs a fling gesture to reach the beginning of a scrollable layout element. The beginning can
            be at the top-most edge in the case of vertical controls, or the left-most edge for horizontal
            controls. Make sure to take into account devices configured with right-to-left languages like
            Arabic and Hebrew.
            Maps to the UiScrollable.flingToBeginning(int) method.
            </summary>
            <param name="maxSwipes"></param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#flingtobeginning</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.FlingToEnd(System.Int32)">
            <summary>
            Performs a fling gesture to reach the end of a scrollable layout element. The end can be at the
            bottom-most edge in the case of vertical controls, or the right-most edge for horizontal controls.
            Make sure to take into account devices configured with right-to-left languages like Arabic and Hebrew.
            Maps to the UiScrollable.flingToEnd() method.
            </summary>
            <param name="maxSwipes"></param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#flingtoend</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.GetChildByDescription(OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector,System.String,System.Boolean)">
            <summary>
            Searches for a child element in the present scrollable container. The search first looks for a
            child element that matches the selector you provided, then looks for the content-description in
            its children elements. If both search conditions are fulfilled, the method returns a {@ link UiObject}
            representing the element matching the selector (not the child element in its subhierarchy containing
            the content-description). By default, this method performs a scroll search.
            Maps to the UiScrollable.getChildByDescription(UiSelector, String, boolean) method.
            </summary>
            <param name="uiSelector">
            UiSelector for a child in a scollable layout element
            </param>
            <param name="description">
            Content-description to find in the children of the childPattern match (may be a partial match)
            </param>
            <param name="allowScrollSearch">
            Set to true if scrolling is allowed
            </param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#getchildbydescription_1</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.GetChildByInstance(OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector,System.Int32)">
            <summary>
            Searches for a child element in the present scrollable container that matches the selector you provided.
            The search is performed without scrolling and only on visible elements.
            Maps to the UiScrollable.getChildByInstance(UiSelector, int) method.
            </summary>
            <param name="uiSelector"></param>
            <param name="instance"></param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#getchildbyinstance</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.GetChildByText(OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector,System.String,System.Boolean)">
            <summary>
            Searches for a child element in the present scrollable container. The search first looks for
            a child element that matches the selector you provided, then looks for the text in its children
            elements. If both search conditions are fulfilled, the method returns a {@ link UiObject}
            representing the element matching the selector (not the child element in its subhierarchy containing
            the text). By default, this method performs a scroll search.
            Maps to the UiScrollable.getChildByText(UiSelector, String, boolean) method.
            </summary>
            <param name="uiSelector"></param>
            <param name="text"></param>
            <param name="allowScrollSearch"></param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#getchildbytext</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.ScrollBackward(System.Int32)">
            <summary>
            Performs a backward scroll. If the swipe direction is set to vertical, then the swipes will be performed
            from top to bottom. If the swipe direction is set to horizontal, then the swipes will be performed
            from left to right. Make sure to take into account devices configured with right-to-left languages
            like Arabic and Hebrew.
            Maps to the UiScrollable.scrollBackward(int) method.
            </summary>
            <param name="steps">
            Number of steps. Use this to control the speed of the scroll action.
            </param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#scrollbackward</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.ScrollDescriptionIntoView(System.String)">
            <summary>
            Performs a forward scroll action on the scrollable layout element until the content-description
            is found, or until swipe attempts have been exhausted. See <see cref="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.SetMaxSearchSwipes(System.Int32)"/>
            Maps to the UiScrollable.scrollDescriptionIntoView(String) method.
            </summary>
            <param name="description"></param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#scrolldescriptionintoview</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.ScrollForward(System.Int32)">
            <summary>
            Performs a forward scroll. If the swipe direction is set to vertical, then the swipes will be performed
            from bottom to top. If the swipe direction is set to horizontal, then the swipes will be performed
            from right to left. Make sure to take into account devices configured with right-to-left languages
            like Arabic and Hebrew.
            Maps to the UiScrollable.scrollForward(int) method.
            </summary>
            <param name="steps">
            Number of steps. Use this to control the speed of the scroll action.
            </param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#scrollforward</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.ScrollTextIntoView(System.String)">
            <summary>
            Performs a forward scroll action on the scrollable layout element until the text you
            provided is visible, or until swipe attempts have been exhausted. See <see cref="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.SetMaxSearchSwipes(System.Int32)"/>
            Maps to the UiScrollable.scrollTextIntoView() method.
            </summary>
            <param name="text"></param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#scrolltextintoview</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.ScrollToBeginning(System.Int32,System.Int32)">
            <summary>
            Scrolls to the beginning of a scrollable layout element. The beginning can be at the top-most
            edge in the case of vertical controls, or the left-most edge for horizontal controls. Make sure
            to take into account devices configured with right-to-left languages like Arabic and Hebrew.
            Maps to the UiScrollable.scrollToBeginning(int, int) method.
            </summary>
            <param name="maxSwipes"></param>
            <param name="steps">
            Use steps to control the speed, so that it may be a scroll, or fling
            </param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#scrolltobeginning</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.ScrollToEnd(System.Int32,System.Int32)">
            <summary>
            Scrolls to the end of a scrollable layout element. The end can be at the bottom-most edge in
            the case of vertical controls, or the right-most edge for horizontal controls. Make sure to take
            into account devices configured with right-to-left languages like Arabic and Hebrew.
            Maps to the UiScrollable.scrollToEnd(int, int) method.
            </summary>
            <param name="maxSwipes"></param>
            <param name="steps">
            Use steps to control the speed, so that it may be a scroll, or fling
            </param>
            <remarks></remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.SetSwipeDeadZonePercentage(System.Double)">
            <summary>
            Sets the percentage of a widget's size that's considered as no-touch zone when swiping.
            The no-touch zone is set as percentage of a widget's total width or height, denoting a margin
            around the swipable area of the widget. Swipes must always start and end inside this margin.
            This is important when the widget being swiped may not respond to the swipe if started at a
            point too near to the edge. The default is 10% from either edge.
            Maps to the UiScrollable.setSwipeDeadZonePercentage(double) method.
            </summary>
            <param name="swipeDeadZonePercentage">
            A percentage value from 0 to 1
            </param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#setswipedeadzonepercentage</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.SetScrollDirection(OpenQA.Selenium.Appium.Android.Enums.ListDirection)">
            <summary>
            Sets the scrolling direction of the list.
            Maps to UiScrollable.setAsHorizontalList() or UiScrollable.setAsVerticalList() depending on the provided <see cref="T:OpenQA.Selenium.Appium.Android.Enums.ListDirection"/>.
            </summary>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.SetMaxSearchSwipes(System.Int32)">
            <summary>
            Sets the maximum number of scrolls allowed when performing a scroll action in search of a child element.
            See <see cref="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.GetChildByDescription(OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector,System.String,System.Boolean)"/> and <see cref="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.GetChildByText(OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector,System.String,System.Boolean)"/>.
            Maps to the UiScrollable.setMaxSearchSwipes(int) method.
            </summary>
            <param name="swipes"></param>
            <remarks></remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.ScrollIntoView(OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector)">
            <summary>
            Perform a scroll forward action to move through the scrollable layout element until a visible item that matches the selector is found.
            Maps to the UiScrollable.scrollIntoView(UiSelector) method.
            </summary>
            <param name="uiSelector"></param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiScrollable#scrollintoview</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.AddRawText(System.String)">
            <summary>
            Append raw text to this <see cref="T:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable"/> instance. The target language is Java.
            Text entered here will not be checked for validity. Use this at your own risk.
            </summary>
            <param name="text">
            Text to be appended to the UiScrollable command builder.
            </param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.Build">
            <summary>
            Compiles the current UiScrollable statements that have
            been added to this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.Build(System.Boolean)">
            <summary>
            Compiles the current UiScrollable statements into a valid Java string which can be executed.
            </summary>
            <param name="terminateStatement">
            Should the statement be returned with a semicolon terminator at the end. Defaults to false.
            The terminator is only appended to the returned statement string - this <see cref="T:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable"/> is not affected.
            </param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiScrollable.AppendTerminalStatement(System.String,System.Object[])">
            <summary>
            Append a statement that immediately ends the current statement chain.
            </summary>
            <param name="format">
            A <see cref="M:System.String.Format(System.String,System.Object[])"/> compatible formatting string
            </param>
            <param name="args">
            An array of objects to format
            </param>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector">
            <summary>
            A convenience class to wrap Android UiSelector method calls.
            The output of this class can be passed to some methods to find an element using
            the Android UiSelector class.
            </summary>
            <remarks>
            Class docs: https://developer.android.com/reference/android/support/test/uiautomator/UiSelector.html
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.#ctor">
            <summary>
            Creates a new UiSelector builder.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.#ctor(OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector)">
            <summary>
            Creates a new UiSelector builder by copying all existing data
            from the given selector.
            </summary>
            <param name="selector">
            The <see cref="T:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector"/> to copy into this new instance
            </param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.IsCheckable(System.Boolean)">
            <summary>
            Set the search criteria to match widgets that are checkable. Typically, using this search criteria
            alone is not useful. You should also include additional criteria, such as text, content-description,
            or the class name for a widget. If no other search criteria is specified, and there is more than one
            matching widget, the first widget in the tree is selected.
            Maps to the UiSelector.checkable(boolean) method.
            </summary>
            <param name="value">
            When true, matches elements which are checkable. When false, matches elements which are not checkable.
            </param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#checkable</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.IsChecked(System.Boolean)">
            <summary>
            Set the search criteria to match widgets that are currently checked (usually for checkboxes). Typically,
            using this search criteria alone is not useful. You should also include additional criteria, such as text,
            content-description, or the class name for a widget. If no other search criteria is specified, and there is
            more than one matching widget, the first widget in the tree is selected.
            Maps to the UiSelector.checked(boolean) method.
            </summary>
            <param name="value">
            When true, matches elements which are checked. When false, matches elements which are not checked.
            </param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#checked</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.ChildSelector(OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector)">
            <summary>
            Adds a child UiSelector criteria to this selector. Use this selector to narrow the search scope to child
            widgets under a specific parent widget.
            Maps to the UiSelector.childSelector(UiSelector) method.
            </summary>
            <param name="selector"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#childselector</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.ClassNameEquals(System.String)">
            <summary>
            Set the search criteria to match the class property for a widget (for example, "android.widget.Button").
            Maps to the UiSelector.className(String) method.
            </summary>
            <param name="className"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#classname</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.ClassNameMatches(System.String)">
            <summary>
            Set the search criteria to match the class property for a widget (for example, "android.widget.Button").
            Maps to the UiSelector.classNameMatches(String) method.
            </summary>
            <param name="regex"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#classnamematches</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.IsClickable(System.Boolean)">
            <summary>
            Set the search criteria to match widgets that are clickable. Typically, using this search criteria alone is not
            useful. You should also include additional criteria, such as text, content-description, or the class name for a
            widget. If no other search criteria is specified, and there is more than one matching widget, the first widget
            in the tree is selected.
            Maps to the UiSelector.clickable(boolean) method.
            </summary>
            <param name="value">
            When true, matches elements which are clickable. When false, matches elements which are not clickable.
            </param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#clickable</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.DescriptionEquals(System.String)">
            <summary>
            Set the search criteria to match the content-description property for a widget. The content-description
            is typically used by the Android Accessibility framework to provide an audio prompt for the widget when
            the widget is selected. The content-description for the widget must match exactly with the string in your
            input argument. Matching is case-sensitive.
            Maps to the UiSelector.description(String) method.
            </summary>
            <param name="description"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#description</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.DescriptionContains(System.String)">
            <summary>
            Set the search criteria to match the content-description property for a widget. The content-description is
            typically used by the Android Accessibility framework to provide an audio prompt for the widget when the
            widget is selected. The content-description for the widget must contain the string in your input argument.
            Matching is case-insensitive.
            Maps to the UiSelector.descriptionContains(String) method.
            </summary>
            <param name="description"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#descriptioncontains</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.DescriptionMatches(System.String)">
            <summary>
            Set the search criteria to match the content-description property for a widget. The content-description is
            typically used by the Android Accessibility framework to provide an audio prompt for the widget when the
            widget is selected. The content-description for the widget must match exactly with the string in your input
            argument.
            Maps to the UiSelector.descriptionMatches(String) method.
            </summary>
            <param name="description"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#descriptionmatches</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.DescriptionStartsWith(System.String)">
            <summary>
            Set the search criteria to match the content-description property for a widget. The content-description is
            typically used by the Android Accessibility framework to provide an audio prompt for the widget when the
            widget is selected. The content-description for the widget must start with the string in your input argument.
            Matching is case-insensitive.
            Maps to the UiSelector.descriptionStartsWith(String) method.
            </summary>
            <param name="description"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#descriptionstartswith</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.IsEnabled(System.Boolean)">
            <summary>
            Set the search criteria to match widgets that are enabled. Typically, using this search criteria alone is not
            useful. You should also include additional criteria, such as text, content-description, or the class name for
            a widget. If no other search criteria is specified, and there is more than one matching widget, the first
            widget in the tree is selected.
            Maps to the UiSelector.enabled(boolean) method.
            </summary>
            <param name="value"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#enabled</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.IsFocusable(System.Boolean)">
            <summary>
            Set the search criteria to match widgets that are focusable. Typically, using this search criteria alone is
            not useful. You should also include additional criteria, such as text, content-description, or the class
            name for a widget. If no other search criteria is specified, and there is more than one matching widget,
            the first widget in the tree is selected.
            Maps to the UiSelector.focusable(boolean) method.
            </summary>
            <param name="value"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#focusable</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.IsFocused(System.Boolean)">
            <summary>
            Set the search criteria to match widgets that have focus. Typically, using this search criteria alone is
            not useful. You should also include additional criteria, such as text, content-description, or the class
            name for a widget. If no other search criteria is specified, and there is more than one matching widget,
            the first widget in the tree is selected.
            Maps to the UiSelector.focused(boolean) method.
            </summary>
            <param name="value"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#focused</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.FromParent(OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector)">
            <summary>
            Adds a child UiSelector criteria to this selector which is used to start search from the parent widget.
            Use this selector to narrow the search scope to sibling widgets as well all child widgets under a parent.
            Maps to the UiSelector.fromParent(UiSelector) method.
            </summary>
            <param name="selector"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#fromparent</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.Index(System.Int32)">
            <summary>
            Set the search criteria to match the widget by its node index in the layout hierarchy. The index value must
            be 0 or greater. Using the index can be unreliable and should only be used as a last resort for matching.
            Instead, consider using the <see cref="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.Instance(System.Int32)"/> method.
            Maps to the UiSelector.index(int) method.
            </summary>
            <param name="index"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#index</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.Instance(System.Int32)">
            <summary>
            Set the search criteria to match the widget by its instance number. The instance value must
            be 0 or greater, where the first instance is 0. For example, to simulate a user click on the
            third image that is enabled in a UI screen, you could specify a a search criteria where the
            instance is 2, the className(String) matches the image widget class, and enabled(boolean) is
            true.
            Maps to the UiSelector.instance(int) method.
            </summary>
            <param name="instance">
            The 0-indexed instance to match on
            </param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#instance</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.IsLongClickable(System.Boolean)">
            <summary>
            Set the search criteria to match widgets that are long-clickable. Typically, using this search
            criteria alone is not useful. You should also include additional criteria, such as text,
            content-description, or the class name for a widget. If no other search criteria is specified,
            and there is more than one matching widget, the first widget in the tree is selected.
            Maps to the UiSelector.longClickable(int) method.
            </summary>
            <param name="value"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#longclickable</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.PackageNameEquals(System.String)">
            <summary>
            Set the search criteria to match the package name of the application that contains the widget.
            Maps to the UiSelector.packageName(String) method.
            </summary>
            <param name="packageName"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#packagename</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.PackageNameMatches(System.String)">
            <summary>
            Set the search criteria to match the package name of the application that contains the widget.
            Maps to the UiSelector.packageNameMatches(String) method.
            </summary>
            <param name="regex"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#packagenamematches</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.ResourceIdEquals(System.String)">
            <summary>
            Set the search criteria to match the given resource ID.
            Maps to the UiSelector.resourceId(String) method.
            </summary>
            <param name="id"></param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#resourceid</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.ResourceIdMatches(System.String)">
            <summary>
            Set the search criteria to match the resource ID of the widget, using a regular expression.
            Maps to the UiSelector.resourceIdMatches(String) method.
            </summary>
            <param name="regex"></param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiSelector.html#resourceidmatches</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.IsScrollable(System.Boolean)">
            <summary>
            Set the search criteria to match widgets that are scrollable. Typically, using this
            search criteria alone is not useful. You should also include additional criteria, such
            as text, content-description, or the class name for a widget. If no other search criteria
            is specified, and there is more than one matching widget, the first widget in the tree
            is selected.
            Maps to the UiSelector.scrollable(boolean) method.
            </summary>
            <param name="value">
            When true, matches elements which are scrollable. When false, matches elements which are not scrollable.
            </param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiSelector.html#scrollable</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.IsSelected(System.Boolean)">
            <summary>
            Set the search criteria to match widgets that are currently selected. Typically, using this
            search criteria alone is not useful. You should also include additional criteria, such as text,
            content-description, or the class name for a widget. If no other search criteria is specified, and
            there is more than one matching widget, the first widget in the tree is selected.
            Maps to the UiSelector.selected(boolean) method.
            </summary>
            <param name="value">
            When true, matches elements which are scrollable. When false, matches elements which are not scrollable.
            </param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#selected</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.AccessibilityIdEquals(System.String)">
            <summary>
            Includes elements whose accessibility-id attribute is equal to the given text.
            Maps to the UiSelector.text(String) method.
            </summary>
            <param name="text"></param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiSelector.html#text</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.TextEquals(System.String)">
            <summary>
            Includes elements whose text attribute is equal to the given text.
            Maps to the UiSelector.text(String) method.
            </summary>
            <param name="text"></param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiSelector.html#text</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.TextContains(System.String)">
            <summary>
            Set the search criteria to match the visible text in a widget where the visible text must contain the
            string in your input argument. The matching is case-sensitive.
            Maps to the UiSelector.textContains(String) method.
            </summary>
            <param name="text"></param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiSelector.html#textcontains</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.TextMatches(System.String)">
            <summary>
            Set the search criteria to match the visible text displayed in a layout element, using a regular expression.
            The text in the widget must match exactly with the string in your input argument.
            Maps to the UiSelector.textMatches(String) method.
            </summary>
            <param name="regex">
            A regular expression
            </param>
            <remarks>https://developer.android.com/reference/androidx/test/uiautomator/UiSelector#textmatches</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.TextStartsWith(System.String)">
            <summary>
            Set the search criteria to match visible text in a widget that is prefixed by the text parameter.
            The matching is case-insensitive.
            Maps to the UiSelector.textStartsWith(String) method.
            </summary>
            <param name="text"></param>
            <remarks>https://developer.android.com/reference/android/support/test/uiautomator/UiSelector#textstartswith</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.AddRawText(System.String)">
            <summary>
            Append raw text to this <see cref="T:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector"/> instance. The target language is Java.
            Text entered here will not be checked for validity. Use this at your own risk.
            </summary>
            <param name="text">
            Text to be appended to the UiSelector command builder.
            </param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Android.UiAutomator.AndroidUiSelector.Build">
            <summary>
            Compiles the current UiSelector statements that have
            been added to this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenQA.Selenium.Appium.AppiumCapabilities">
            <summary>
            Appium capabilities
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumCapabilities.ToDictionary">
             <summary>
             Get the capabilities back as a dictionary
            
             This method uses Reflection and should be removed once
             AppiumOptions class is avalaible for each driver
             </summary>
             <returns></returns>
        </member>
        <member name="T:OpenQA.Selenium.Appium.AppiumCommand">
            <summary>
            Container class for the command tuple
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumCommand.Merge(OpenQA.Selenium.Remote.CommandInfoRepository)">
            <summary>
            This method adds Appium-specific commands to the given 
            CommandInfoRepository
            </summary>
            <param name="repo">is a CommandInfoRepository instance which is used</param>
            <returns>The given CommandInfoRepository instance with added Appium-specific commands</returns>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumCommand.CommandType">
            <summary>
            command type 
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumCommand.CommandName">
            <summary>
            Command 
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumCommand.ApiEndpoint">
            <summary>
            API Endpoint
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenQA.Selenium.Appium.AppiumCommand.#ctor(System.String,System.String,System.String)" -->
        <member name="M:OpenQA.Selenium.Appium.AppiumCommandExecutionHelper.PrepareArgument(System.String,System.Object)">
            <summary>
            Prepares single command argument
            </summary>
            <param name="name">The parameter name</param>
            <param name="value">The parameter value</param>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumCommandExecutionHelper.PrepareArguments(System.String[],System.Object[])">
            <summary>
            Prepares a collection of command arguments
            </summary>
            <param name="names">The array of parameter names</param>
            <param name="values">The array of parameter values</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenQA.Selenium.Appium.AppiumDriver`1.Rotate(System.Collections.Generic.Dictionary{System.String,System.Int32})" -->
        <member name="M:OpenQA.Selenium.Appium.AppiumDriver`1.GetAppStringDictionary(System.String,System.String)">
            <summary>
            Get all defined Strings from an app for the specified language and
            strings filename
            </summary>
            <returns>a dictionary with localized strings defined in the app.</returns>
            <param name="language">strings language code</param>
            <param name="stringFile">strings filename</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumDriver`1.HideKeyboard">
            <summary>
            Hides the device keyboard.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumDriver`1.HideKeyboard(System.String)">
            <summary>
            Hides the device keyboard.
            </summary>
            <param name="key">The button pressed by the mobile driver to attempt hiding the keyboard.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumDriver`1.HideKeyboard(System.String,System.String)">
            <summary>
            Hides the device keyboard.
            </summary>
            <param name="strategy">Hide keyboard strategy (optional, UIAutomation only). Available strategies - 'press', 'pressKey', 'swipeDown', 'tapOut', 'tapOutside', 'default'.</param>
            <param name="key">The button pressed by the mobile driver to attempt hiding the keyboard.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumDriver`1.IsKeyboardShown">
            <summary>
            Whether or not the soft keyboard is shown.
            </summary>
            <returns>True if the keyboard is shown. (boolean)</returns>
        </member>
        <member name="P:OpenQA.Selenium.Appium.AppiumDriver`1.Location">
            <summary>
            GPS Location
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumDriver`1.GetIMEAvailableEngines">
            <summary>
            Get a list of IME engines available on the device
            </summary>
            <returns>List of available </returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumDriver`1.GetIMEActiveEngine">
            <summary>
            Get the currently active IME Engine on the device
            </summary>
            <returns>Active IME Engine</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumDriver`1.IsIMEActive">
            <summary>
            Is the IME active on the device (NOTE: on Android, this is always true)
            </summary>
            <returns>true if IME is active, false otherwise</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumDriver`1.ActivateIMEEngine(System.String)">
            <summary>
            Activate the given IME on Device
            </summary>
            <param name="imeEngine">IME to activate</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumDriver`1.DeactiveIMEEngine">
            <summary>
            Deactivate the currently Active IME Engine on device
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.AppiumDriver`1.DeviceTime">
            <summary>
            Gets device date and time for both iOS(Supports only real device) and Android devices
            </summary>
            <returns>A string which consists of date and time</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumDriver`1.MatchImageFeatures(System.String,System.String,OpenQA.Selenium.Appium.ImageComparison.FeaturesMatchingOptions)">
            <summary>
            Performs images matching by features. Read
            https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_feature2d/py_matcher/py_matcher.html
            for more details on this topic.
            </summary>
            <param name="base64Image1">base64-encoded representation of the first image</param>
            <param name="base64Image2">base64-encoded representation of the second image</param>
            <param name="options">comparison options</param>
            <returns>The matching result. The configuration of fields in the result depends on comparison options</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumDriver`1.FindImageOccurence(System.String,System.String,OpenQA.Selenium.Appium.ImageComparison.OccurenceMatchingOptions)">
            <summary>
            Performs images matching by template to find possible occurrence of 
            the partial image in the full image with default options. Read
            https://docs.opencv.org/2.4/doc/tutorials/imgproc/histograms/template_matching/template_matching.html
            for more details on this topic.
            </summary>
            <param name="fullImage">base64-encoded representation of the full image</param>
            <param name="partialImage">base64-encoded representation of the partial image</param>
            <param name="options">comparison options</param>
            <returns>The matching result. The configuration of fields in the result depends on comparison options.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumDriver`1.GetImagesSimilarity(System.String,System.String,OpenQA.Selenium.Appium.ImageComparison.SimilarityMatchingOptions)">
            <summary>
            Performs images matching to calculate the similarity score between them.
            The flow there is similar to the one used in
            <see cref="M:OpenQA.Selenium.Appium.AppiumDriver`1.FindImageOccurence(System.String,System.String,OpenQA.Selenium.Appium.ImageComparison.OccurenceMatchingOptions)"/>
            but it is mandatory that both images are of equal size.
            </summary>
            <param name="base64Image1">base64-encoded representation of the first image</param>
            <param name="base64Image2">base64-encoded representation of the second image</param>
            <param name="options">comparison options</param>
            <returns>Matching result. The configuration of fields in the result depends on comparison options.</returns>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.ShakeDevice">
            <summary>
            Represents the Shake Device Mapping command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.LockDevice">
            <summary>
            Represents the Lock Device Mapping command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.UnlockDevice">
            <summary>
            Represents the Unlock Device Mapping command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.IsLocked">
            <summary>
            Represents the Is Device Locked Mapping command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.ToggleAirplaneMode">
            <summary>
            Toggle's the Airplane Mode ("Flight Safe Mode") Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GsmCall">
            <summary>
            Toggle Wifi Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.SetGsmSignalStrength">
            <summary>
            Set GSM signal strength
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.SetGsmVoiceState">
            <summary>
            Set GSM voice state
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.ToggleData">
            <summary>
            Toggle Network Data Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.PressKeyCode">
            <summary>
            Press key code
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.LongPressKeyCode">
            <summary>
            Long press key code
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.Rotate">
            <summary>
            Rotate Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GetCurrentActivity">
            <summary>
            Get CurrentActivity Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GetCurrentPackage">
            <summary>
            Get CurrentPackage Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.InstallApp">
            <summary>
            Install App Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.RemoveApp">
            <summary>
            Remove App Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.ActivateApp">
            <summary>
            Activate App Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.TerminateApp">
            <summary>
            Remove App Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.IsAppInstalled">
            <summary>
            Is App Installed Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.PushFile">
            <summary>
            Push File Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.PullFile">
            <summary>
            Pull File Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.PullFolder">
            <summary>
            Pull Folder Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.ToggleWiFi">
            <summary>
            Toggle Wifi Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.ToggleLocationServices">
            <summary>
            Toggle Location Services Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.LaunchApp">
            <summary>
            Launch App Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.CloseApp">
            <summary>
            Close App Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.ResetApp">
            <summary>
            Reset App Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.BackgroundApp">
            <summary>
             Background App Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.EndTestCoverage">
            <summary>
             End Test Coverage Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GetAppStrings">
            <summary>
             Get App Strings Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GetAppState">
            <summary>
            Get App State Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.HideKeyboard">
            <summary>
            Represents the Hide Keyboard command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.IsKeyboardShown">
            <summary>
            Whether or not the soft keyboard is shown
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.OpenNotifications">
            <summary>
             Open Notifications Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.SystemBars">
            <summary>
            Get System Bars
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.SystemTime">
            <summary>
            Get the time on the device
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GetDisplayDensity">
            <summary>
            Get Display Density
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.StartActivity">
            <summary>
            The Start Activity command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.SetLocation">
            <summary>
            Set GPS Location Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GetLocation">
            <summary>
            Get GPS Location Command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.PerformTouchAction">
            <summary>
            Perform touch action
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.PerformMultiAction">
            <summary>
            Perform multi touch action
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.Actions">
            <summary>
            Perform multi purpose W3C actions
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.Contexts">
            <summary>
            Represents the Contexts command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GetContext">
            <summary>
            Represents the Get Context command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.SetContext">
            <summary>
            Represents the Set Context command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GetOrientation">
            <summary>
            Represents the Get Orientation Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.SetOrientation">
            <summary>
            Represents the Set Orientation Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GetConnectionType">
            <summary>
            Represents the Get Network Connection Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.SetConnectionType">
            <summary>
            Represents the Set Network Connection Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GetAvailableEngines">
            <summary>
            Represents the Get Available Engines Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GetActiveEngine">
            <summary>
            Represents the Get Active Engine Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.IsIMEActive">
            <summary>
            Represents the is IME active Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.ActivateEngine">
            <summary>
            Represents the Activate Engine Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.DeactivateEngine">
            <summary>
            Represents the Deactivate Engine Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GetScreenshot">
            <summary>
            Represents the Screenshot Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.GetSettings">
            <summary>
            Represents the GetSettings Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.UpdateSettings">
            <summary>
            Represents the UpdateSettings Command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.TouchID">
            <summary>
            Represents the TouchID command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumDriverCommand.FingerPrint">
            <summary>
            Represents the fingerPrint command
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Appium.AppiumOptions">
            <summary>
            Generic browser options
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.AppiumOptions.capabilities">
            <summary>
            The dictionary of capabilities
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumOptions.AddAdditionalCapability(System.String,System.Object)">
            <summary>
            Add new capabilities
            </summary>
            <param name="capabilityName">Capability name</param>
            <param name="capabilityValue">Capabilities value, which cannot be null or empty</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumOptions.ToCapabilities">
            <summary>
            Turn the capabilities into an desired capability
            </summary>
            <returns>A desired capability</returns>
        </member>
        <member name="T:OpenQA.Selenium.Appium.AppiumWebElement">
            <summary>
            AppiumWebElement allows you to have access to specific items that are found on the page.
            </summary>
            <seealso cref="T:OpenQA.Selenium.IWebElement"/>
            <seealso cref="T:OpenQA.Selenium.ILocatable"/>
            <example>
            <code>
            [Test]
            public void TestGoogle()
            {
                driver = new AppiumDriver();
                AppiumWebElement elem = driver.FindElement(By.Name("q"));
                elem.SendKeys("Cheese please!");
            }
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver,System.String)">
            <summary>
            Initializes a new instance of the AppiumWebElement class.
            </summary>
            <param name="parent">Driver in use.</param>
            <param name="id">ID of the element.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenQA.Selenium.Appium.AppiumWebElement.Rotate(System.Collections.Generic.Dictionary{System.String,System.Int32})" -->
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds the first element in the page that matches the OpenQA.Selenium.By object 
            </summary>
            <param name="by">Mechanism to find element</param>
            <returns>first element found</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenQA.Selenium.Appium.AppiumWebElement.FindElements(OpenQA.Selenium.By)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementByClassName(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementsByClassName(System.String)" -->
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementById(System.String)">
            <summary>
            Finds the first element in the page that matches the ID supplied
            </summary>
            <param name="id">ID of the element</param>
            <returns>First element found</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementsById(System.String)">
            <summary>
            Finds a list of elements that match the ID supplied
            </summary>
            <param name="id">ID of the element</param>
            <returns>ReadOnlyCollection of elements found</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementByCssSelector(System.String)">
            <summary>
            Finds the first element matching the specified CSS selector
            </summary>
            <param name="cssSelector">The CSS selector to match</param>
            <returns>First element found</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementsByCssSelector(System.String)">
            <summary>
            Finds a list of elements that match the CSS selector
            </summary>
            <param name="cssSelector">The CSS selector to match</param>
            <returns>ReadOnlyCollection of elements found</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementByLinkText(System.String)">
            <summary>
            Finds the first of elements that match the link text supplied
            </summary>
            <param name="linkText">Link text of element</param>
            <returns>First element found</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementsByLinkText(System.String)">
            <summary>
            Finds a list of elements that match the link text supplied
            </summary>
            <param name="linkText">Link text of element</param>
            <returns>ReadOnlyCollection of elements found</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementByName(System.String)">
            <summary>
            Finds the first of elements that match the name supplied
            </summary>
            <param name="name">Name of the element on the page</param>
            <returns>First element found</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementsByName(System.String)">
            <summary>
            Finds a list of elements that match the name supplied
            </summary>
            <param name="name">Name of the element on the page</param>
            <returns>ReadOnlyCollection of elements found</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementByPartialLinkText(System.String)">
            <summary>
            Finds the first of elements that match the part of the link text supplied
            </summary>
            <param name="partialLinkText">Part of the link text</param>
            <returns>First element found</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementsByPartialLinkText(System.String)">
            <summary>
            Finds a list of elements that match the part of the link text supplied
            </summary>
            <param name="partialLinkText">Part of the link text</param>
            <returns>ReadOnlyCollection of elements found</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementByTagName(System.String)">
            <summary>
            Finds the first of elements that match the DOM Tag supplied
            </summary>
            <param name="tagName">DOM tag name of the element being searched</param>
            <returns>First element found</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementsByTagName(System.String)">
            <summary>
            Finds a list of elements that match the DOM Tag supplied
            </summary>
            <param name="tagName">DOM tag name of the element being searched</param>
            <returns>ReadOnlyCollection of elements found</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementByXPath(System.String)">
            <summary>
            Finds the first of elements that match the XPath supplied
            </summary>
            <param name="xpath">xpath to the element</param>
            <returns>First element found</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.AppiumWebElement.FindElementsByXPath(System.String)">
            <summary>
            Finds a list of elements that match the XPath supplied
            </summary>
            <param name="xpath">xpath to the element</param>
            <returns>ReadOnlyCollection of elements found</returns>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType">
            <summary>
            The list of Android-specific capabilities
            Read: https://github.com/appium/appium/blob/1.5/docs/en/writing-running-appium/caps.md#android-only
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AppActivity">
            <summary>
            Activity name for the Android activity you want to launch from your package. This often needs to be preceded
            by a . (e.g., .MainActivity instead of MainActivity)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AppPackage">
            <summary>
            Java package of the Android app you want to run
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AppWaitActivity">
            <summary>
            Activity name for the Android activity you want to wait for
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AppWaitPackage">
            <summary>
            Java package of the Android app you want to wait for
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.DeviceReadyTimeout">
            <summary>
            Timeout in seconds while waiting for device to become ready
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AndroidCoverage">
            <summary>
             Fully qualified instrumentation class. Passed to -w in adb shell am instrument -e coverage true -w
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.EnablePerformanceLogging">
            <summary>
            (Chrome and webview only) Enable Chromedriver's performance logging (default false)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AndroidDeviceReadyTimeout">
            <summary>
            Timeout in seconds used to wait for a device to become ready after booting
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AdbPort">
            <summary>
            Port used to connect to the ADB server (default 5037)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AndroidDeviceSocket">
            <summary>
            Devtools socket name. Needed only when tested app is a Chromium embedding browser.
            The socket is open by the browser and Chromedriver connects to it as a devtools client.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.Avd">
            <summary>
            Name of avd to launch
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AvdLaunchTimeout">
            <summary>
            How long to wait in milliseconds for an avd to launch and connect to ADB (default 120000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AvdReadyTimeout">
            <summary>
            How long to wait in milliseconds for an avd to finish its boot animations (default 120000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AvdArgs">
            <summary>
            Additional emulator arguments used when launching an avd
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.UseKeystore">
            <summary>
            Use a custom keystore to sign apks, default false
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.KeystorePath">
            <summary>
            Path to custom keystore, default ~/.android/debug.keystore
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.KeystorePassword">
            <summary>
            Password for custom keystore
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.KeyAlias">
            <summary>
            Alias for key
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.KeyPassword">
            <summary>
            Password for key
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.ChromedriverExecutable">
            <summary>
            The absolute local path to webdriver executable (if Chromium embedder provides its own webdriver,
            it should be used instead of original chromedriver bundled with Appium)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AutoWebviewTimeout">
            <summary>
            Amount of time to wait for Webview context to become active, in ms. Defaults to 2000
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.IntentAction">
            <summary>
            Intent action which will be used to start activity (default android.intent.action.MAIN)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.IntentCategory">
            <summary>
            Intent category which will be used to start activity (default android.intent.category.LAUNCHER)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.IntentFlags">
            <summary>
            Flags that will be used to start activity (default 0x10200000)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.OptionalIntentArguments">
            <summary>
            Additional intent arguments that will be used to start activity. See Intent arguments:
            http://developer.android.com/tools/help/adb.html#IntentSpec
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.DontStopAppOnReset">
            <summary>
            Doesn't stop the process of the app under test, before starting the app using adb.
            If the app under test is created by another anchor app, setting this false,
            allows the process of the anchor app to be still alive, during the start of the test app using adb.
            In other words, with dontStopAppOnReset set to true, we will not include the -S flag in the adb shell am start call.
            With this capability omitted or set to false, we include the -S flag. Default false
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.UnicodeKeyboard">
            <summary>
            Enable Unicode input, default false
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.ResetKeyboard">
            <summary>
            Reset keyboard to its original state, after running Unicode tests with unicodeKeyboard capability.
            Ignored if used alone. Default false
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.NoSign">
            <summary>
            Skip checking and signing of app with debug keys, will work only with
            UiAutomator and not with selendroid, default false
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.IgnoreUnimportantViews">
            <summary>
            Calls the setCompressedLayoutHierarchy() uiautomator function. This capability can speed up test execution,
            since Accessibility commands will run faster ignoring some elements. The ignored elements will not be findable,
            which is why this capability has also been implemented as a toggle-able setting as well as a capability.
            Defaults to false
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.DisableAndroidWatchers">
            <summary>
            Disables android watchers that watch for application not responding and application crash,
            this will reduce cpu usage on android device/emulator. This capability will work only with
            UiAutomator and not with selendroid, default false
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.ChromeOptions">
            <summary>
            Allows passing chromeOptions capability for ChromeDriver. For more information see chromeOptions:
            https://sites.google.com/a/chromium.org/chromedriver/capabilities
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.RECREATE_CHROME_DRIVER_SESSIONS">
            Kill ChromeDriver session when moving to a non-ChromeDriver webview. Defaults to false
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.NativeWebScreenshot">
            <summary>
            In a web context, use native (adb) method for taking a screenshot, rather than proxying
            to ChromeDriver, default false.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AndroidScreenshotPath">
            <summary>
            The name of the directory on the device in which the screenshot will be put.
            Defaults to /data/local/tmp.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AndroidInstallTimeout">
            <summary>
            Timeout in milliseconds used to wait for an apk to install to the device. Defaults to `90000`.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AppWaitDuration">
            <summary>
            Timeout in seconds while waiting for device to become ready.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.AndroidMobileCapabilityType.AutoGrantPermissions">
            <summary>
            Have Appium automatically determine which permissions your app requires and grant them to the app on install.
            Defaults to false. If noReset is true, this capability doesn't work.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType">
            <summary>
            The list of iOS-specific capabilities
            Read: https://github.com/appium/appium/blob/1.5/docs/en/writing-running-appium/caps.md#ios-only
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.CalendarFormat">
            <summary>
            (Sim-only) Calendar format to set for the iOS Simulator
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.BundleId">
            <summary>
            Bundle ID of the app under test. Useful for starting an app on a real device or for using other caps which require
            the bundle ID during test startup. To run a test on a real device using the bundle ID,
            you may omit the 'app' capability, but you must provide 'udid'.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.LaunchTimeout">
            <summary>
            Amount of time in ms to wait for instruments before assuming it hung and failing the session
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.LocationServicesEnabled">
            <summary>
            (Sim-only) Force location services to be either on or off. Default is to keep current sim setting.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.LocationServicesAuthorized">
            <summary>
            (Sim-only) Set location services to be authorized or not authorized for app via plist, so that location services
            alert doesn't pop up. Default is to keep current sim setting. Note that
            if you use this setting you MUST also use the bundleId capability to send in your app's bundle ID.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.AutoAcceptAlerts">
            <summary>
            Accept all iOS alerts automatically if they pop up. This includes privacy access permission alerts
            (e.g., location, contacts, photos). Default is false.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.AutoDismissAlerts">
            <summary>
            Dismiss all iOS alerts automatically if they pop up.
            This includes privacy access permission alerts (e.g.,
            location, contacts, photos). Default is false.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.NativeInstrumentsLib">
            <summary>
            Use native intruments lib (ie disable instruments-without-delay).
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.NativeWebTap">
            <summary>
            (Sim-only) Enable "real", non-javascript-based web taps in Safari.
            Default: false.
            Warning: depending on viewport size/ratio this might not accurately tap an element
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.SafariInitialUrl">
            <summary>
            (Sim-only) (>= 8.1) Initial safari url, default is a local welcome page
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.SafariAllowPopups">
            <summary>
            (Sim-only) Allow javascript to open new windows in Safari. Default keeps current sim setting
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.SafariIgnoreFraudWarning">
            <summary>
            (Sim-only) Prevent Safari from showing a fraudulent website warning. Default keeps current sim setting.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.SafariOpenLinksInBackground">
            <summary>
            (Sim-only) Whether Safari should allow links to open in new windows. Default keeps current sim setting.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.KeepKeyChains">
            <summary>
            (Sim-only) Whether to keep keychains (Library/Keychains) when appium session is started/finished
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.LOCALIZABLE_STRINGS_DIR">
            <summary>
            Where to look for localizable strings. Default en.lproj
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.ProcessArguments">
            <summary>
            Arguments to pass to the AUT using instruments
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.InterKeyDelay">
            <summary>
            The delay, in ms, between keystrokes sent to an element when typing.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.ShowIOSLog">
            <summary>
            Whether to show any logs captured from a device in the appium logs. Default false
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.SendKeyStrategy">
            <summary>
            strategy to use to type test into a test field. Simulator default: oneByOne. Real device default: grouped
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.ScreenshotWaitTimeout">
            <summary>
            Max timeout in sec to wait for a screenshot to be generated. default: 10
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.WaitForAppScript">
            <summary>
            The ios automation script used to determined if the app has been launched,
            by default the system wait for the page source not to be empty. The result must be a boolean
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.WebviewConnectRetries">
            <summary>
            Number of times to send connection message to remote debugger, to get webview. Default: 8
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.IOSMobileCapabilityType.AppName">
            <summary>
            The display name of the application under test. Used to automate backgrounding the app in iOS 9+.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileBrowserType.Browser">
            <summary>
            It is native Android browser.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.App">
            <summary>
            Capability name used for the apllication setting.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.PlatformName">
            <summary>
            Capability name used for the target platform name setting.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.PlatformVersion">
            <summary>
            Capability name used for the target platform version setting.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.DeviceName">
            <summary>
            Capability name used for the automation name (e.g. Appium, Selendroid and so on) setting.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.NewCommandTimeout">
            <summary>
            Time out for the waiting for a new command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.BrowserName">
            <summary>
            Name of mobile web browser to automate. Should be an empty string if automating an app instead.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.AutomationName">
            <summary>
            Capability name used for the automation name (e.g. Appium, Selendroid and so on) setting.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.AppiumVersion">
            <summary>
            Capability name used for the setting up of the required appium version.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.Udid" -->
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.Language">
            <summary>
            (Sim/Emu-only) Language to set for the simulator / emulator
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.Locale">
            <summary>
            (Sim/Emu-only) Locale to set for the simulator / emulator
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.Orientation">
            <summary>
            (Sim/Emu-only) start in a certain orientation
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.AutoWebview">
            <summary>
             Move directly into Webview context. Default false
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.NoReset">
            <summary>
            Don't reset app state before this session. Default false
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Enums.MobileCapabilityType.FullReset">
            <summary>
            (iOS) Delete the entire simulator folder. (Android) Reset app state by uninstalling app instead of clearing app data.
            On Android, this will also remove the app after the session is complete. Default false
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.GuardClauses.RequireNotNull``1(``0,System.String)">
            <summary>
            The given value must not be null, otherwise an <see cref="T:System.ArgumentNullException"/>
            will be thrown.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value to test</param>
            <param name="paramName">
            The name of the parameter which is being checked. This is to help identify
            the parameter which did not meet the requirement. Use nameof() to ensure
            proper refactoring support.
            </param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.GuardClauses.RequireIsPositive(System.Int32,System.String)">
            <summary>
            The given value must be greater than or equal to 0 (zero), otherwise
            an <see cref="T:System.ArgumentOutOfRangeException"/> will be thrown.
            </summary>
            <param name="value">The value to test</param>
            <param name="paramName">
            The name of the parameter which is being checked. This is to help identify
            the parameter which did not meet the requirement. Use nameof() to ensure
            proper refactoring support.
            </param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.GuardClauses.RequirePercentage(System.Double,System.String)">
            <summary>
            The given value must be between 0 and 1, otherwise an <see cref="T:System.ArgumentOutOfRangeException"/>
            will be thrown.
            </summary>
            <param name="value">The value to test</param>
            <param name="paramName">
            The name of the parameter which is being checked. This is to help identify
            the parameter which did not meet the requirement. Use nameof() to ensure
            proper refactoring support.
            </param>
            <returns></returns>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.ComparisonOptions.Visualize">
            <summary>
            Makes the endpoint to return an image,
            which contains the visualized result of the corresponding
            picture matching operation. This option is disabled by default.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.ComparisonResult.Visualization">
            <summary>
            The visualization of the matching result represented as base64-encoded PNG image.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.FeaturesMatchingOptions.DetectorName">
            <summary>
            Sets the detector name for features matching algorithm.
            Some of these detectors (FAST, AGAST, GFTT, FAST, SIFT and MSER) are not available
            in the default OpenCV installation and have to be enabled manually before
            library compilation. The default detector name is 'ORB'.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.FeaturesMatchingOptions.MatchFunc">
            <summary>
            The name of the matching function.
            The default one is 'BruteForce'.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.FeaturesMatchingOptions.GoodMatchesFactor">
            <summary>
            The maximum count of "good" matches (e. g. with minimal distances).
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.FeaturesMatchingResult.Count">
            <summary>
            The count of matched edges on both images.
            The more matching edges there are no both images the more similar they are.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.FeaturesMatchingResult.TotalCount">
            <summary>
            The total count of matched edges on both images.
            It is equal to `count` if `goodMatchesFactor` does not limit the matches,
            otherwise it contains the total count of matches before `goodMatchesFactor` 
            is applied.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.FeaturesMatchingResult.Points1">
            <summary>
            The list of matching points on the first image.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.FeaturesMatchingResult.Points2">
            <summary>
            The list of matching points on the second image.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.FeaturesMatchingResult.Rect1">
            <summary>
            The bounding rect for the `points1` list or a zero rect if not enough matching points were found.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.FeaturesMatchingResult.Rect2">
            <summary>
            The bounding rect for the `points2` list or a zero rect if not enough matching points were found.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.OccurenceMatchingOptions.Threshold">
            <summary>
            At what normalized threshold to reject an occurrence.
            Value in range 0..1. 0.5 is the default value.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.OccurenceMatchingResult.Rect">
            <summary>
            The region of the partial image occurence on the full image.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.ImageComparison.SimilarityMatchingResult.Score">
            <summary>
            The similarity score as a float number in range [0.0, 1.0].
            1.0 is the highest score (means both images are totally equal).
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Interactions.IInteractionInfo">
            <summary>
            Provides a method by which optional attributes can be added to an Interactions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interactions.IInteractionInfo.ToDictionary">
            <summary>
            Returns optional values that are set to extend the default interaction values.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> representing the values that are set.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Interactions.PenInfo">
            <summary>
            Represents a collection of optional attributes for pen pointer interaction.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interactions.PenInfo.Pressure">
            <summary>
            The normalized pressure of the pointer input in the range of [0,1]
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interactions.PenInfo.Twist">
            <summary>
            The clockwise rotation (in degrees, in the range of [0,359]) of a transducer (e.g. pen stylus) around its own major axis
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interactions.PenInfo.TiltX">
            <summary>
            The plane angle (in degrees, in the range of [-90,90]) between the Y-Z plane and the plane containing both the transducer (e.g. pen stylus) axis and the Y axis
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interactions.PenInfo.TiltY">
            <summary>
            The plane angle (in degrees, in the range of [-90,90]) between the X-Z plane and the plane containing both the transducer (e.g. pen stylus) axis and the X axis
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interactions.PenInfo.ToDictionary">
            <summary>
            Returns optional values that are set to extend the default pen pointer interaction values.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> representing the values that are set.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Interactions.TouchInfo">
            <summary>
            Represents a collection of optional attributes for touch pointer interaction.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interactions.TouchInfo.Pressure">
            <summary>
            The normalized pressure of the pointer input in the range of [0,1]
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interactions.TouchInfo.Twist">
            <summary>
            The clockwise rotation (in degrees, in the range of [0,359]) of a transducer (e.g. pen stylus) around its own major axis
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interactions.TouchInfo.Width">
            <summary>
            The width (magnitude on the X axis), in pixels of the contact geometry of the pointer
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interactions.TouchInfo.Height">
            <summary>
            The height (magnitude on the Y axis), in pixels of the contact geometry of the pointer
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interactions.TouchInfo.ToDictionary">
            <summary>
            Returns optional values that are set to extend the default touch pointer interaction values.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> representing the values that are set.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Interactions.PointerButton">
            <summary>
            Specifies the button used during a pointer down or up action.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Interactions.PointerButton.None">
            <summary>
            Neither buttons nor touch/pen contact changed since last event
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Interactions.PointerButton.LeftMouse">
            <summary>
            Mouse left button
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Interactions.PointerButton.TouchContact">
            <summary>
            Default touch contact
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Interactions.PointerButton.PenContact">
            <summary>
            The pen tip
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Interactions.PointerButton.MiddleMouse">
            <summary>
            Mouse middle button
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Interactions.PointerButton.RightMouse">
            <summary>
            Mouse right button
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Interactions.PointerButton.PenBarrel">
            <summary>
            Pen barrel button
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Interactions.PointerButton.X1Mouse">
            <summary>
            Mouse X1 (back) button
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Interactions.PointerButton.X2Mouse">
            <summary>
            Mouse X1 (forward) button
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Interactions.PointerButton.PenEraser">
            <summary>
            The pen eraser button
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Interactions.PointerInputDevice">
            <summary>
            Represents a pointer input device such as pen, touch, and mouse. This class extends
            OpenQA.Selenium.Interactions.PointerUInputDevice to add optional interaction values
            such as pressure, rotation, tilt angle, etc.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interactions.PointerInputDevice.#ctor(OpenQA.Selenium.Interactions.PointerKind)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Appium.Interactions.PointerInputDevice"/> class.
            </summary>
            <param name="pointerKind">The kind of pointer represented by this input device.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interactions.PointerInputDevice.#ctor(OpenQA.Selenium.Interactions.PointerKind,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Appium.Interactions.PointerInputDevice"/> class.
            </summary>
            <param name="pointerKind">The kind of pointer represented by this input device.</param>
            <param name="deviceName">The unique name for this input device.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interactions.PointerInputDevice.CreatePointerDown(OpenQA.Selenium.Appium.Interactions.PointerButton)">
            <summary>
            Creates a pointer down action.
            </summary>
            <param name="button">The button of the pointer that should be pressed.</param>
            <returns>The action representing the pointer down gesture.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interactions.PointerInputDevice.CreatePointerUp(OpenQA.Selenium.Appium.Interactions.PointerButton)">
            <summary>
            Creates a pointer up action.
            </summary>
            <param name="button">The button of the pointer that should be released.</param>
            <returns>The action representing the pointer up gesture.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interactions.PointerInputDevice.CreatePointerDown(OpenQA.Selenium.Appium.Interactions.PointerButton,OpenQA.Selenium.Appium.Interactions.IInteractionInfo)">
            <summary>
            Creates a pointer down action.
            </summary>
            <param name="button">The button of the pointer that should be pressed.</param>
            <param name="pointerExtraAttributes">Additional pointer attributes.</param>
            <returns>The action representing the pointer down gesture.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interactions.PointerInputDevice.CreatePointerUp(OpenQA.Selenium.Appium.Interactions.PointerButton,OpenQA.Selenium.Appium.Interactions.IInteractionInfo)">
            <summary>
            Creates a pointer up action.
            </summary>
            <param name="button">The button of the pointer that should be released.</param>
            <param name="pointerExtraAttributes">Additional pointer attributes.</param>
            <returns>The action representing the pointer up gesture.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interactions.PointerInputDevice.CreatePointerMove(OpenQA.Selenium.IWebElement,System.Int32,System.Int32,System.TimeSpan,OpenQA.Selenium.Appium.Interactions.IInteractionInfo)">
            <summary>
            Creates a pointer move action to a specific element.
            </summary>
            <param name="target">The <see cref="T:OpenQA.Selenium.IWebElement"/> used as the target for the move.</param>
            <param name="xOffset">The horizontal offset from the origin of the move.</param>
            <param name="yOffset">The vertical offset from the origin of the move.</param>
            <param name="duration">The length of time the move gesture takes to complete.</param>
            <param name="pointerExtraAttributes">Additional pointer attributes.</param>
            <returns>The action representing the pointer move gesture.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interactions.PointerInputDevice.CreatePointerMove(OpenQA.Selenium.Interactions.CoordinateOrigin,System.Int32,System.Int32,System.TimeSpan,OpenQA.Selenium.Appium.Interactions.IInteractionInfo)">
            <summary>
            Creates a pointer move action to an absolute coordinate.
            </summary>
            <param name="origin">The origin of coordinates for the move. Values can be relative to
            the view port origin, or the most recent pointer position.</param>
            <param name="xOffset">The horizontal offset from the origin of the move.</param>
            <param name="yOffset">The vertical offset from the origin of the move.</param>
            <param name="duration">The length of time the move gesture takes to complete.</param>
            <param name="pointerExtraAttributes">Additional pointer attributes.</param>
            <returns>The action representing the pointer move gesture.</returns>
            <exception cref="T:System.ArgumentException">Thrown when passing CoordinateOrigin.Element into origin.
            Users should use the other CreatePointerMove overload to move to a specific element.</exception>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Interfaces.IContextAware">
            <summary>
            Some implementations of WebDriver, notably those that support native testing, need the ability
            to switch between the native and web-based contexts. This can be achieved by using this
            interface.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interfaces.IContextAware.Context">
            <summary>
            Switches the focus of future commands for this driver to the context with the given name
            AND
            returns an opaque handle to this context that uniquely identifies it within this driver
            instance.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interfaces.IContextAware.Contexts">
            <summary>
            Return a list of context handles which can be used to iterate over all contexts of this
            WebDriver instance
            </summary>       
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IExecuteMethod.Execute(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Execute a command on the remote server.
            </summary>
            <param name="commandName">A remote command</param>
            <param name="parameters">Parameters to execute</param>
            <returns>The result</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IExecuteMethod.Execute(System.String)">
            <summary>
            Execute a command on the remote server.
            </summary>
            <param name="driverCommand">A remote command</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByAccessibilityId`1.FindElementByAccessibilityId(System.String)">
            <summary>
            Finds the first of elements that match the Accessibility Id selector supplied
            </summary>
            <param name="selector">an Accessibility Id selector</param>
            <returns>IWebElement object so that you can interact that object</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByAccessibilityId`1.FindElementsByAccessibilityId(System.String)">
            <summary>
            Finds a list of elements that match the Accessibility Id selector supplied
            </summary>
            <param name="selector">an Accessibility Id selector</param>
            <returns>IWebElement object so that you can interact that object</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByAndroidDataMatcher`1.FindElementByAndroidDataMatcher(System.String)">
            <summary>
            Finds the first element in the page that matches the Android Espresso's Data Matcher selector supplied
            </summary>
            <param name="selector">Selector for the element.</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(new DriverOptions());
            IWebElement elem = driver.FindElementByAndroidDataMatcher('elements()'))
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByAndroidDataMatcher`1.FindElementsByAndroidDataMatcher(System.String)">
            <summary>
            Finds a list of elements that match the Android Espresso's Data Matcher selector supplied
            </summary>
            <param name="selector">Selector for the elements.</param>
            <returns>ReadOnlyCollection of IWebElement object so that you can interact with those objects</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(new FirefoxOptions());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByAndroidDataMatcher(elements())
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByAndroidUIAutomator`1.FindElementByAndroidUIAutomator(System.String)">
            <summary>
            Finds the first element in the page that matches the Android UIAutomator selector supplied
            </summary>
            <param name="selector">Selector for the element.</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(new FirefoxOptions());
            IWebElement elem = driver.FindElementByAndroidUIAutomator('elements()'))
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByAndroidUIAutomator`1.FindElementByAndroidUIAutomator(OpenQA.Selenium.Appium.Interfaces.IUiAutomatorStatementBuilder)">
            <summary>
            Finds the first element in the page that matches the Android UIAutomator selector supplied
            </summary>
            <param name="selector">Selector for the element.</param>
            <returns>IWebElement object so that you can interact that object</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByAndroidUIAutomator`1.FindElementsByAndroidUIAutomator(System.String)">
            <summary>
            Finds a list of elements that match the Android UIAutomator selector supplied
            </summary>
            <param name="selector">Selector for the elements.</param>
            <returns>ReadOnlyCollection of IWebElement object so that you can interact with those objects</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(new FirefoxOptions());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByAndroidUIAutomator(elements())
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByAndroidUIAutomator`1.FindElementsByAndroidUIAutomator(OpenQA.Selenium.Appium.Interfaces.IUiAutomatorStatementBuilder)">
            <summary>
            Finds a list of elements that match the Android UIAutomator selector supplied
            </summary>
            <param name="selector">Selector for the elements.</param>
            <returns>ReadOnlyCollection of IWebElement object so that you can interact with those objects</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByIosUIAutomation`1.FindElementByIosUIAutomation(System.String)">
            <summary>
            Finds the first of elements that match the Ios UIAutomation selector supplied
            </summary>
            <param name="selector">an Ios UIAutomation selector</param>
            <returns>IWebElement object so that you can interact that object</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByIosUIAutomation`1.FindElementsByIosUIAutomation(System.String)">
            <summary>
            Finds a list of elements that match the Ios UIAutomation selector supplied
            </summary>
            <param name="selector">an Ios UIAutomation selector</param>
            <returns>IWebElement object so that you can interact that object</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByTizenUIAutomation`1.FindElementByTizenUIAutomation(System.String)">
            <summary>
            Finds the first of elements that match the Tizen UIAutomation selector supplied
            </summary>
            <param name="selector">a Tizen UIAutomation selector</param>
            <returns>IWebElement object so that you can interact that object</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByTizenUIAutomation`1.FindElementsByTizenUIAutomation(System.String)">
            <summary>
            Finds a list of elements that match the Tizen UIAutomation selector supplied
            </summary>
            <param name="selector">a Tizen UIAutomation selector</param>
            <returns>ReadOnlyCollection of IWebElement objects so that you can interact with those objects</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByWindowsUIAutomation`1.FindElementByWindowsUIAutomation(System.String)">
            <summary>
            Finds the first of elements that match the Windows UIAutomation selector supplied
            </summary>
            <param name="selector">a Windows UIAutomation selector</param>
            <returns>IWebElement object so that you can interact that object</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindByWindowsUIAutomation`1.FindElementsByWindowsUIAutomation(System.String)">
            <summary>
            Finds a list of elements that match the Windows UIAutomation selector supplied
            </summary>
            <param name="selector">a Windows UIAutomation selector</param>
            <returns>ReadOnlyCollection of IWebElement objects so that you can interact with those objects</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindsByFluentSelector`1.FindElement(System.String,System.String)">
            <summary>
            Method performs the searching for a single element by some selector defined by string
            and value of the given selector
            </summary>
            <param name="by">is a string selector</param>
            <param name="value">is a value of the given selector</param>
            <returns>the first found element</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindsByFluentSelector`1.FindElements(System.String,System.String)">
            <summary>
            Method performs the searching for a list of elements by some selector defined by string
            and value of the given selector
            </summary>
            <param name="by">is a string selector</param>
            <param name="value">is a value of the given selector</param>
            <returns>a list of elements</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindsByImage`1.FindElementByImage(System.String)">
            <summary>
            Performs the lookup for a single element by matching its image template
            to the current full screen shot. This type of locator requires OpenCV libraries
            and bindings for NodeJS to be installed on the server machine.
            Lookup options fine-tuning might be done via <see cref="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasSettings.SetSetting(System.String,System.Object)"/>. (Supported since Appium 1.8.2)
            </summary>
            <param name="base64Template">base64-encoded template image string.
            Supported image formats are the same as for OpenCV library.
            </param>
            <see href="https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/image-comparison.md"> For the documentation on Image Comparison Features</see>
            <see href="https://github.com/appium/appium-base-driver/blob/master/lib/basedriver/device-settings.js">For the settings available for lookup fine-tuning</see>
            <returns>The first element that matches the given selector</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindsByImage`1.FindElementsByImage(System.String)">
            <summary>
            Performs the lookup for a list of elements by matching its image template
            to the current full screen shot. This type of locator requires OpenCV libraries
            and bindings for NodeJS to be installed on the server machine.
            Lookup options fine-tuning might be done via <see cref="M:OpenQA.Selenium.Appium.Android.Interfaces.IHasSettings.SetSetting(System.String,System.Object)"/>. (Supported since Appium 1.8.2)
            </summary>
            <param name="base64Template">base64-encoded template image string.
            Supported image formats are the same as for OpenCV library.
            </param>
            <see href="https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/image-comparison.md"> For the documentation on Image Comparison Features</see>
            <see href="https://github.com/appium/appium-base-driver/blob/master/lib/basedriver/device-settings.js">For the settings available for lookup fine-tuning</see>
            <returns>A list of elements that match the given selector or an empty list</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindsByIosClassChain`1.FindElementByIosClassChain(System.String)">
            <summary>
            Finds the first of elements that match the IosClassChain selector supplied
            </summary>
            <param name="selector">an IosClassChain selector</param>
            <returns>IWebElement object so that you can interact that object</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindsByIosClassChain`1.FindElementsByIosClassChain(System.String)">
            <summary>
            Finds a list of elements that match the IosClassChain selector supplied
            </summary>
            <param name="selector">an IosClassChain selector</param>
            <returns>ReadOnlyCollection of IWebElement objects so that you can interact with those objects</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindsByIosNSPredicate`1.FindElementByIosNsPredicate(System.String)">
            <summary>
            Finds the first of elements that match the IosNsPredicate selector supplied
            </summary>
            <param name="selector">an IosNsPredicate selector</param>
            <returns>IWebElement object so that you can interact that object</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IFindsByIosNSPredicate`1.FindElementsByIosNsPredicate(System.String)">
            <summary>
            Finds a list of elements that match the IosNsPredicate selector supplied
            </summary>
            <param name="selector">an IosNsPredicate selector</param>
            <returns>ReadOnlyCollection of IWebElement objects so that you can interact with those objects</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHasClipboard.SetClipboard(OpenQA.Selenium.Appium.Enums.ClipboardContentType,System.String)">
            <summary>
            Sets the content to the clipboard
            </summary>
            <param name="contentType"></param>
            <param name="base64Content"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHasClipboard.GetClipboard(OpenQA.Selenium.Appium.Enums.ClipboardContentType)">
            <summary>
            Get the content of the clipboard.
            </summary>
            <param name="contentType"></param>
            <remarks>Android supports plaintext only</remarks>
            <returns>The content of the clipboard as base64-encoded string or an empty string if the clipboard is empty</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHasClipboard.SetClipboardText(System.String,System.String)">
            <summary>
            Sets text to the clipboard
            </summary>
            <param name="textContent"></param>
            <param name="label">For Android only - A user visible label for the clipboard content.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHasClipboard.GetClipboardText">
            <summary>
            Get the plaintext content of the clipboard.
            </summary>
            <remarks>Android supports plaintext only</remarks>
            <returns>The string content of the clipboard or an empty string if the clipboard is empty</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHasClipboard.SetClipboardUrl(System.String)">
            <summary>
            Sets the url string to the clipboard
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHasClipboard.GetClipboardUrl">
            <summary>
            Gets the url string from the clipboard
            </summary>
            <returns>The url string content of the clipboard or an empty string if the clipboard is empty</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHasClipboard.SetClipboardImage(System.Drawing.Image)">
            <summary>
            Sets the image to the clipboard
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHasClipboard.GetClipboardImage">
            <summary>
            Gets the image from the clipboard
            </summary>
            <returns>The image content of the clipboard as base64-encoded string or an empty string the clipboard is empty</returns>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Interfaces.IHasLocation">
            <summary>
            Describes a contract by which you can get or set a GPS location on a mobile device.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interfaces.IHasLocation.Location">
            <summary>
            Gets or sets the GPS location of this mobile device.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interfaces.IHasSessionDetails.SessionDetails">
            <summary>
            a dictionary of values that hold session details.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHasSessionDetails.GetSessionDetail(System.String)">
            <summary>
            This property returns a certain session detail by it key 
            or null if there is no such detail.
            </summary>
            <param name="detail"> is the detail key-name</param>
            <returns>an object of null if there is no such detail</returns>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interfaces.IHasSessionDetails.PlatformName">
            <summary>
            This property returns a name of the mobile plathorm of the current 
            session.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interfaces.IHasSessionDetails.AutomationName">
            <summary>
            This property returns a name of the automation type of the current 
            session.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Interfaces.IHasSessionDetails.IsBrowser">
            <summary>
            This property should return <code>true</code> when
            user's code is currently works on browser or web view.
            <code>false</code> should be returned otherwice.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHidesKeyboard.HideKeyboard">
            <summary>
            Hides the device keyboard.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHidesKeyboard.HideKeyboard(System.String)">
            <summary>
            Hides the device keyboard.
            </summary>
            <param name="key">The button pressed by the mobile driver to attempt hiding the keyboard.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHidesKeyboard.HideKeyboard(System.String,System.String)">
            <summary>
            Hides the device keyboard.
            </summary>
            <param name="strategy">Hide keyboard strategy (optional, UIAutomation only). Available strategies - 'press', 'pressKey', 'swipeDown', 'tapOut', 'tapOutside', 'default'.</param>
            <param name="key">The button pressed by the mobile driver to attempt hiding the keyboard.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHidesKeyboard.IsKeyboardShown">
            <summary>
            Whether or not the soft keyboard is shown
            </summary>
            <returns><see cref="!:true"/> if keyboard is shown, <see cref="!:false"/> if not.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IHidesKeyboardWithKeyName.HideKeyboard(System.String,System.String)">
            <summary>
            Hides the keyboard if it is showing. Hiding the keyboard often
            depends on the way an app is implemented, no single strategy always
            works.
            </summary>
            <param name="key">a String, representing the text displayed on the button of the
            keyboard you want to press. For example: "Done".
            </param>
            <param name="strategy">HideKeyboardStrategy</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithApps.InstallApp(System.String)">
            <summary>
            Installs an App.
            </summary>
            <param name="appPath">a string containing the file path or url of the app.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithApps.LaunchApp">
            <summary>
            Launches the current app.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithApps.IsAppInstalled(System.String)">
            <summary>
            Checks If an App Is Installed.
            </summary>
            <param name="appPath">a string containing the bundle id.</param>
            <return>a boolean indicating if the app is installed.</return>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithApps.ResetApp">
            <summary>
            Resets the current app.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithApps.BackgroundApp">
            <summary>
            Deactivates app completely (as "Home" button does).  
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithApps.BackgroundApp(System.Int32)">
            <summary>
            Backgrounds the current app for the given number of seconds or deactivates app completely if negative number is given. 
            </summary>
            <param name="seconds">an integer number containing the number of seconds.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithApps.BackgroundApp(System.TimeSpan)">
            <summary>
            Backgrounds the current app for the given number of seconds or deactivates app completely if negative number is given. 
            </summary>
            <param name="timepSpan">the timespan of running the app in the background.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithApps.RemoveApp(System.String)">
            <summary>
            Removes an App.
            </summary>
            <param name="appPath">a string containing the id of the app.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithApps.ActivateApp(System.String)">
            <summary>
            Activates the given app by moving to the foreground if it is running in the background or starting it if it is not running yet.
            </summary>
            <param name="appPath">a string containing the id of the app.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithApps.TerminateApp(System.String)">
            <summary>
            Terminates an App.
            </summary>
            <param name="appId">a string containing the id of the app.</param>
            <return>a boolean indicating if the app was terminated.</return>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithApps.TerminateApp(System.String,System.TimeSpan)">
            <summary>
            Terminates an App.
            </summary>
            <param name="appId">a string containing the id of the app.</param>
            <param name="timeout">a TimeSpan for how long to wait until the application is terminated.</param>
            <return>a boolean indicating if the app was terminated in the given timeout.</return>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithApps.CloseApp">
            <summary>
            Closes the current app.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithApps.GetAppState(System.String)">
            <summary>
            Gets the State of the app.
            </summary>
            <param name="appId">a string containing the id of the app.</param>
            <returns>an enumeration of the app state.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithFiles.PullFile(System.String)">
            <summary>
            Pulls a File.
            </summary>
            <param name="pathOnDevice">path on device to pull</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IInteractsWithFiles.PullFolder(System.String)">
            <summary>
            Pulls a Folder
            </summary>
            <param name="remotePath">remote path to the folder to return</param>
            <returns>a base64 encoded string representing a zip file of the contents of the folder</returns>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Interfaces.IMobileElement`1">
            <summary>
            This interface extends IWebElement and defines specific behavior
            for mobile.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IMultiAction.Add(OpenQA.Selenium.Appium.Interfaces.ITouchAction)">
            <summary>
            Add touch actions to be performed
            </summary>
            <param name="touchAction"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IMultiAction.Cancel">
            <summary>
            Cancels the Multi Action
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IMultiAction.Perform">
            <summary>
            Performs the Multi Action
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IMultiAction.GetParameters">
            <summary>
            Gets the actions parameter dictionary for this multi touch action
            </summary>
            <returns>empty dictionary if no actions found, else dictionary of actions</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.INetworkActions.ToggleAirplaneMode">
            <summary>
            Toggle airplane mode on device.
            <remarks>Only supports below API 24 (Android 7) on emulators</remarks>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenQA.Selenium.Appium.Interfaces.INetworkActions.ToggleData" -->
        <member name="M:OpenQA.Selenium.Appium.Interfaces.INetworkActions.ToggleWifi">
            <summary>
            Switch the state of the WiFi service
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.INetworkActions.ToggleLocationServices">
            <summary>
            Switch the state of the location service
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.INetworkActions.MakeGsmCall(System.String,OpenQA.Selenium.Appium.Enums.GsmCallActions)">
            <summary>
            Make GSM call (Emulator only)
            </summary>
            <param name="phoneNumber"></param>
            <param name="gsmCallAction"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.INetworkActions.SendSms(System.String,System.String)">
            <summary>
            Simulate an SMS message (Emulator only)
            </summary>
            <param name="phoneNumber"></param>
            <param name="message"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.INetworkActions.SetGsmSignalStrength(OpenQA.Selenium.Appium.Enums.GsmSignalStrength)">
            <summary>
            Sets GSM signal strength (Emulator only)
            </summary>
            <param name=""></param>
            <param name="gsmSignalStrength"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.INetworkActions.SetGsmVoice(OpenQA.Selenium.Appium.Enums.GsmVoiceState)">
            <summary>
            Set GSM voice state (Emulator only)
            </summary>
            <param name="gsmVoiceState"></param>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Interfaces.IPerformsTouchActions">
            <summary>
            Provides a mechanism for building advanced interactions with the browser/application.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IPerformsTouchActions.PerformMultiAction(OpenQA.Selenium.Appium.Interfaces.IMultiAction)">
            <summary>
            Performs the multi-action sequence.
            </summary>
            <param name="multiAction">Multi-action to perform.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IPerformsTouchActions.PerformTouchAction(OpenQA.Selenium.Appium.Interfaces.ITouchAction)">
            <summary>
            Perform the touch-action sequence.
            </summary>
            <param name="touchAction">touch action to perform</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ISendsKeyEvents.PressKeyCode(System.Int32,System.Int32)">
            <summary>
            Sends a device key event with meta state
            </summary>
            <param name="keyCode">Code for the long key pressed on the Android device</param>
            <param name="metastate">metastate for the long key press</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ISendsKeyEvents.LongPressKeyCode(System.Int32,System.Int32)">
            <summary>
            Sends a device long key event with meta state
            </summary>
            <param name="keyCode">Code for the long key pressed on the Android device</param>
            <param name="metastate">metastate for the long key press</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ISendsKeyEvents.PressKeyCode(OpenQA.Selenium.Appium.Android.KeyEvent)">
            <summary>
            Sends a key event to the device under test
            </summary>
            <param name="keyEvent">The generated key event <see cref="T:OpenQA.Selenium.Appium.Android.KeyEvent"/></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ISendsKeyEvents.LongPressKeyCode(OpenQA.Selenium.Appium.Android.KeyEvent)">
            <summary>
            Sends a long press key event to the device under test
            </summary>
            <param name="keyEvent">The generated key event <see cref="T:OpenQA.Selenium.Appium.Android.KeyEvent"/></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ITouchAction.LongPress(OpenQA.Selenium.IWebElement,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Press at the specified location in the element until the  context menu appears.
            </summary>
            <param name="element">The target element.</param>
            <param name="x">The x coordinate relative to the element.</param>
            <param name="y">The y coordinate relative to the element.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ITouchAction.LongPress(System.Double,System.Double)">
            <summary>
            Press at the specified location until the  context menu appears.
            </summary>
            <param name="element">The target element.</param>
            <param name="x">The x coordinate relative to the element.</param>
            <param name="y">The y coordinate relative to the element.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ITouchAction.MoveTo(OpenQA.Selenium.IWebElement,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Move to the specified location in the element.
            </summary>
            <param name="element">The target element.</param>
            <param name="x">The x coordinate relative to the element.</param>
            <param name="y">The y coordinate relative to the element.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ITouchAction.MoveTo(System.Double,System.Double)">
            <summary>
            Move to the specified location.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ITouchAction.Press(OpenQA.Selenium.IWebElement,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Press at the specified location in the element.
            </summary>
            <param name="element">The target element.</param>
            <param name="x">The x coordinate relative to the element.</param>
            <param name="y">The y coordinate relative to the element.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ITouchAction.Press(System.Double,System.Double)">
            <summary>
            Press at the specified location.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ITouchAction.Release">
            <summary>
            Release the pressure.
            </summary>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ITouchAction.Tap(OpenQA.Selenium.IWebElement,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int64})">
            <summary>
            Tap at the specified location in the element.
            </summary>
            <param name="element">The target element.</param>
            <param name="x">The x coordinate relative to the element.</param>
            <param name="y">The y coordinate relative to the element.</param>
            <param name="count">The number of times to tap.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ITouchAction.Tap(System.Double,System.Double,System.Nullable{System.Int64})">
            <summary>
            Tap at the specified location.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="count">The number of times to tap.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ITouchAction.Wait(System.Nullable{System.Int64})">
            <summary>
            Wait for the given duration.
            </summary>
            <param name="ms">The amount of time to wait in milliseconds.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ITouchAction.Cancel">
            <summary>
            Cancels the Multi Action
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.ITouchAction.Perform">
            <summary>
            Performs the Multi Action
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Interfaces.IWebElementCached">
            <summary>
            This interface extends IWebElement and adds caching support.
            To enable caching at the driver level, set the shouldUseCompactResponses capability:
               shouldUseCompactResponses: true
            To specify the attributes to be cached, set the elementResponseAttributes capability:
               elementResponseAttributes: "name,text,rect,attribute/name,attribute/value"
            Note: the cache uses W3C names for attributes. 
                  For TagName, use "name"
                  For Size, Location use "rect"
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IWebElementCached.SetCacheValues(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Replace any existing values in the cache with the supplied values. 
            The cache is enabled for this element.
            <param name="cacheValues">The new cache values</param>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IWebElementCached.DisableCache">
            <summary>
            Disable the cache for this element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Interfaces.IWebElementCached.ClearCache">
            <summary>
            Clear all values from the cache.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.Interfaces.IPerformsTouchID.PerformTouchID(System.Boolean)">
            <summary>
            Simulate touchId event
            </summary>
            <param name="match">If true, simulates a successful fingerprint scan. 
            If false, simulates a failed fingerprint scan.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.Interfaces.IShakesDevice.ShakeDevice">
            <summary>
            Shakes the device.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.#ctor(OpenQA.Selenium.Remote.ICommandExecutor,OpenQA.Selenium.DriverOptions)">
            <summary>
            Initializes a new instance of the IOSDriver class
            </summary>
            <param name="commandExecutor">An <see cref="T:OpenQA.Selenium.Remote.ICommandExecutor"/> object which executes commands for the driver.</param>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.#ctor(OpenQA.Selenium.DriverOptions)">
            <summary>
            Initializes a new instance of the IOSDriver class using Appium options
            </summary>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the Appium options of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.#ctor(OpenQA.Selenium.DriverOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the IOSDriver class using Appium options and command timeout
            </summary>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumServiceBuilder,OpenQA.Selenium.DriverOptions)">
            <summary>
            Initializes a new instance of the IOSDriver class using the AppiumServiceBuilder instance and Appium options
            </summary>
            <param name="builder"> object containing settings of the Appium local service which is going to be started</param>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumServiceBuilder,OpenQA.Selenium.DriverOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the IOSDriver class using the AppiumServiceBuilder instance, Appium options and command timeout
            </summary>
            <param name="builder"> object containing settings of the Appium local service which is going to be started</param>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.#ctor(System.Uri,OpenQA.Selenium.DriverOptions)">
            <summary>
            Initializes a new instance of the IOSDriver class using the specified remote address and Appium options
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4723/wd/hub).</param>
            <param name="DriverOptions">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumLocalService,OpenQA.Selenium.DriverOptions)">
            <summary>
            Initializes a new instance of the IOSDriver class using the specified Appium local service and Appium options
            </summary>
            <param name="service">the specified Appium local service</param>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the Appium options of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.#ctor(System.Uri,OpenQA.Selenium.DriverOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the IOSDriver class using the specified remote address, Appium options, and command timeout.
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4723/wd/hub).</param>
            <param name="DriverOptions">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumLocalService,OpenQA.Selenium.DriverOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the IOSDriver class using the specified Appium local service, Appium options, and command timeout.
            </summary>
            <param name="service">the specified Appium local service</param>
            <param name="driverOptions">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.Lock(System.Int32)">
            <summary>
            Locks the device.
            </summary>
            <param name="seconds">The number of seconds during which the device need to be locked for.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.SetClipboard(OpenQA.Selenium.Appium.Enums.ClipboardContentType,System.String)">
            <summary>
            Sets the content to the clipboard
            </summary>
            <param name="contentType"></param>
            <param name="base64Content"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.GetClipboard(OpenQA.Selenium.Appium.Enums.ClipboardContentType)">
            <summary>
            Get the content of the clipboard.
            </summary>
            <param name="contentType"></param>
            <remarks>Android supports plaintext only</remarks>
            <returns>The content of the clipboard as base64-encoded string or an empty string if the clipboard is empty</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.SetClipboardText(System.String,System.String)">
            <summary>
            Sets text to the clipboard
            </summary>
            <param name="textContent"></param>
            <param name="label">For Android only - A user visible label for the clipboard content.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.GetClipboardText">
            <summary>
            Get the plaintext content of the clipboard.
            </summary>
            <remarks>Android supports plaintext only</remarks>
            <returns>The string content of the clipboard or an empty string if the clipboard is empty</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.SetClipboardUrl(System.String)">
            <summary>
            Sets the url string to the clipboard
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.GetClipboardUrl">
            <summary>
            Gets the url string from the clipboard
            </summary>
            <returns>The url string content of the clipboard or an empty string if the clipboard is empty</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.SetClipboardImage(System.Drawing.Image)">
            <summary>
            Sets the image to the clipboard
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSDriver`1.GetClipboardImage">
            <summary>
            Gets the image from the clipboard
            </summary>
            <returns>The image content of the clipboard as an Image object or null if there is no image on the clipboard</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSElement.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver,System.String)">
            <summary>
            Initializes a new instance of the IOSElement class.
            </summary>
            <param name="parent">Driver in use.</param>
            <param name="id">ID of the element.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSStartScreenRecordingOptions.WithVideoType(OpenQA.Selenium.Appium.iOS.IOSStartScreenRecordingOptions.VideoType)">
            <summary>
            The format of the screen capture to be recorded.
            Available formats: "h264", "mp4" or "fmp4". Default is "mp4".
            Only works for Simulator.
            </summary>
            <param name="videoType">one of available format names.</param>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSStartScreenRecordingOptions.WithVideoType(System.String)">
            <summary>
            The format of the screen capture to be recorded.
            Available formats: Execute <code>ffmpeg -codecs</code> in the terminal to see the list of supported video codecs.
            ‘mjpeg’ by default. (Since Appium 1.10.0)
            </summary>
            <param name="videoType">one of available format names.</param>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSStartScreenRecordingOptions.WithVideoQuality(OpenQA.Selenium.Appium.iOS.IOSStartScreenRecordingOptions.VideoQuality)">
            <summary>
            The video encoding quality (low, medium, high, photo - defaults to medium).
            Only works for real devices.
            </summary>
            <param name="videoQuality"></param>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSStartScreenRecordingOptions.WithTimeLimit(System.TimeSpan)">
            <summary>
            The maximum recording time.The default value is 180 seconds (3 minutes).
            The maximum value is 10 minutes.
            Setting values greater than this or less than zero will cause an exception. The minimum
            time resolution unit is one second.
            </summary>
            <param name="timeLimit">The actual time limit of the recorded video.</param>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSStartScreenRecordingOptions.WithVideoFps(System.String)">
            <summary>
            The Frames Per Second rate of the recorded video.
            Change this value if the resulting video is too slow or too fast.
            Defaults to 10. This can decrease the resulting file size.
            </summary>
            <param name="videoFps"></param>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSStartScreenRecordingOptions.WithVideoScale(System.String)">
            <summary>
            The scaling value to apply.
            Read <see href="https://trac.ffmpeg.org/wiki/Scaling">here</see> for possible values.
            Example value of 720p scaling is '1280:720'. This can decrease/increase the resulting file size.
            No scale is applied by default.
            </summary>
            <param name="videoScale"></param>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSStartScreenRecordingOptions.WithPixelFormat(System.String)">
            <summary>
            Output pixel format.
            Run <code>ffmpeg -pix_fmts</code> to list possible values.
            For QuickTime compatibility, set to “yuv420p” along with videoType: “libx264”.
            Supported since Appium 1.12.0)
            </summary>
            <param name="pixelFormat"></param>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.iOS.IOSStartScreenRecordingOptions.WithVideoFilter(System.String)">
            <summary>
            The ffmpeg video filters to apply.
            These filters allow to scale, flip, rotate and do many other useful transformations on the source video stream.
            The format of the property must comply with listed <see href="https://ffmpeg.org/ffmpeg-filters.html">here</see>
            Supported since Appium 1.15)
            </summary>
            <param name="videoFilters"></param>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Mac.MacDriver`1.#ctor(OpenQA.Selenium.Remote.ICommandExecutor,OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the MacDriver class
            </summary>
            <param name="commandExecutor">An <see cref="T:OpenQA.Selenium.Remote.ICommandExecutor"/> object which executes commands for the driver.</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Mac.MacDriver`1.#ctor(OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the MacDriver class using Appium options
            </summary>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.Appium.AppiumOptions"/> object containing the Appium options of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Mac.MacDriver`1.#ctor(OpenQA.Selenium.Appium.AppiumOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the MacDriver class using Appium options and command timeout
            </summary>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Mac.MacDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumServiceBuilder,OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the MacDriver class using the AppiumServiceBuilder instance and Appium options
            </summary>
            <param name="builder"> object containing settings of the Appium local service which is going to be started</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Mac.MacDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumServiceBuilder,OpenQA.Selenium.Appium.AppiumOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the MacDriver class using the AppiumServiceBuilder instance, Appium options and command timeout
            </summary>
            <param name="builder"> object containing settings of the Appium local service which is going to be started</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Mac.MacDriver`1.#ctor(System.Uri,OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the MacDriver class using the specified remote address and Appium options
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4723/wd/hub).</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.Appium.AppiumOptions"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Mac.MacDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumLocalService,OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the MacDriver class using the specified Appium local service and Appium options
            </summary>
            <param name="service">the specified Appium local service</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Mac.MacDriver`1.#ctor(System.Uri,OpenQA.Selenium.Appium.AppiumOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the MacDriver class using the specified remote address, Appium options, and command timeout.
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4723/wd/hub).</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.Appium.AppiumOptions"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Mac.MacDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumLocalService,OpenQA.Selenium.Appium.AppiumOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the MacDriver class using the specified Appium local service, Appium options, and command timeout.
            </summary>
            <param name="service">the specified Appium local service</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Mac.MacElement.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver,System.String)">
            <summary>
            Initializes a new instance of the MacElement class.
            </summary>
            <param name="parent">Driver in use.</param>
            <param name="id">ID of the element.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MobileBy.FindElement(OpenQA.Selenium.ISearchContext)">
            <summary>
            Find a single element.
            </summary>
            <param name="context">Context used to find the element.</param>
            <returns>The element that matches</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MobileBy.FindElements(OpenQA.Selenium.ISearchContext)">
            <summary>
            Finds many elements
            </summary>
            <param name="context">Context used to find the element.</param>
            <returns>A readonly collection of elements that match.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MobileBy.AccessibilityId(System.String)">
            <summary>
            This method creates a <see cref="T:OpenQA.Selenium.By"/> strategy 
            that searches for elements by accessibility id
            About Android accessibility
            <see cref="!:https://developer.android.com/intl/ru/training/accessibility/accessible-app.html"/>
            About iOS accessibility
            <see cref="!:https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIAccessibilityIdentification_Protocol/index.html"/>
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MobileBy.AndroidUIAutomator(System.String)">
            <summary>
            This method creates a <see cref="T:OpenQA.Selenium.By"/> strategy 
            that searches for elements using Android UI automation framework.
            <see cref="!:http://developer.android.com/intl/ru/tools/testing-support-library/index.html#uia-apis"/>
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MobileBy.AndroidUIAutomator(OpenQA.Selenium.Appium.Interfaces.IUiAutomatorStatementBuilder)">
            <summary>
            This method creates a <see cref="T:OpenQA.Selenium.By"/> strategy 
            that searches for elements using Android UI automation framework.
            <see cref="!:http://developer.android.com/intl/ru/tools/testing-support-library/index.html#uia-apis"/>
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MobileBy.AndroidDataMatcher(System.String)">
            <summary>
            This method creates a <see cref="T:OpenQA.Selenium.By"/> strategy
            that searches for elements using Espresso's Data Matcher.
            <see cref="!:http://appium.io/docs/en/writing-running-appium/android/espresso-datamatcher-selector"/>
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MobileBy.IosUIAutomation(System.String)">
            <summary>
            This method creates a <see cref="T:OpenQA.Selenium.By"/> strategy 
            that searches for elements using iOS UI automation.
            <see cref="!:https://developer.apple.com/library/tvos/documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/UIAutomation.html"/>
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
            <returns></returns>
        </member>
        <member name="T:OpenQA.Selenium.Appium.ByAccessibilityId">
            <summary>
            Finds element when the Accessibility Id selector has the specified value.
            About Android accessibility 
            <see cref="!:https://developer.android.com/intl/ru/training/accessibility/accessible-app.html"/>
            About iOS accessibility
            <see cref="!:https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIAccessibilityIdentification_Protocol/index.html"/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ByAccessibilityId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Appium.ByAccessibilityId"/> class.
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
        </member>
        <member name="T:OpenQA.Selenium.Appium.ByAndroidUIAutomator">
            <summary>
            Finds element when the Android UIAutomator selector has the specified value.
            <see cref="!:http://developer.android.com/intl/ru/tools/testing-support-library/index.html#uia-apis"/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ByAndroidUIAutomator.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Appium.ByAndroidUIAutomator"/> class.
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ByAndroidUIAutomator.#ctor(OpenQA.Selenium.Appium.Interfaces.IUiAutomatorStatementBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Appium.ByAndroidUIAutomator"/> class.
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
        </member>
        <member name="T:OpenQA.Selenium.Appium.ByAndroidDataMatcher">
            <summary>
            Finds element when the Espresso's Data Matcher selector has the specified value.
            <see cref="!:http://appium.io/docs/en/writing-running-appium/android/espresso-datamatcher-selector"/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ByAndroidDataMatcher.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Appium.ByAndroidDataMatcher"/> class.
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
        </member>
        <member name="T:OpenQA.Selenium.Appium.ByIosUIAutomation">
            <summary>
            Finds element when the Ios UIAutomation selector has the specified value.
            <see cref="!:https://developer.apple.com/library/tvos/documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/UIAutomation.html"/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ByIosUIAutomation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Appium.ByIosUIAutomation"/> class.
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ByWindowsAutomation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Appium.ByWindowsAutomation"/> class.
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ByTizenAutomation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Appium.ByTizenAutomation"/> class.
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ByIosNSPredicate.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Appium.ByIosNSPredicate"/> class.
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ByIosClassChain.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Appium.ByIosClassChain"/> class.
            </summary>
            <param name="selector">The selector to use in finding the element.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ByImage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Appium.ByImage"/> class.
            </summary>
            <param name="base64Template">base64-encoded template image string.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MultiTouch.MultiAction.#ctor(OpenQA.Selenium.Appium.Interfaces.IPerformsTouchActions)">
            <summary>
            Initializes a new instance of the <see cref="!:MultiTouchAction"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.IWebDriver"/> the driver to be used.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MultiTouch.MultiAction.Add(OpenQA.Selenium.Appium.Interfaces.ITouchAction)">
            <summary>
            Add touch actions to be performed
            </summary>
            <param name="touchAction"></param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MultiTouch.MultiAction.GetParameters">
            <summary>
            Gets the actions parameter dictionary for this multi touch action
            </summary>
            <returns>empty dictionary if no actions found, else dictionary of actions</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MultiTouch.MultiAction.Cancel">
            <summary>
            Cancels the Multi Action
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MultiTouch.MultiAction.Perform">
            <summary>
            Executes the Multi Action
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenQA.Selenium.Appium.MultiTouch.TouchAction.LongPress(OpenQA.Selenium.IWebElement,System.Nullable{System.Double},System.Nullable{System.Double})" -->
        <!-- Badly formed XML comment ignored for member "M:OpenQA.Selenium.Appium.MultiTouch.TouchAction.LongPress(System.Double,System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenQA.Selenium.Appium.MultiTouch.TouchAction.MoveTo(OpenQA.Selenium.IWebElement,System.Nullable{System.Double},System.Nullable{System.Double})" -->
        <!-- Badly formed XML comment ignored for member "M:OpenQA.Selenium.Appium.MultiTouch.TouchAction.MoveTo(System.Double,System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenQA.Selenium.Appium.MultiTouch.TouchAction.Press(OpenQA.Selenium.IWebElement,System.Nullable{System.Double},System.Nullable{System.Double})" -->
        <!-- Badly formed XML comment ignored for member "M:OpenQA.Selenium.Appium.MultiTouch.TouchAction.Press(System.Double,System.Double)" -->
        <member name="M:OpenQA.Selenium.Appium.MultiTouch.TouchAction.Release">
            <summary>
            Release the pressure.
            </summary>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MultiTouch.TouchAction.Tap(OpenQA.Selenium.IWebElement,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int64})">
            <summary>
            Tap at the specified location in the element.
            </summary>
            <param name="element">The target element.</param>
            <param name="x">The x coordinate relative to the element.</param>
            <param name="y">The y coordinate relative to the element.</param>
            <param name="count">The number of times to tap.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MultiTouch.TouchAction.Tap(System.Double,System.Double,System.Nullable{System.Int64})">
            <summary>
            Tap at the specified location.
            </summary>
            <param name="x">The x coordinate relative to the element.</param>
            <param name="y">The y coordinate relative to the element.</param>
            <param name="count">The number of times to tap.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MultiTouch.TouchAction.Wait(System.Nullable{System.Int64})">
            <summary>
            Wait for the given duration.
            </summary>
            <param name="ms">The amount of time to wait in milliseconds.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Appium.Interfaces.ITouchAction"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MultiTouch.TouchAction.Cancel">
            <summary>
            Cancels the Touch Action
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.MultiTouch.TouchAction.Perform">
            <summary>
            Executes the Touch Action
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute.op_Equality(OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute,OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute)">
            <summary>
            Determines if two <see cref="!:FindsByAttribute"/> instances are equal.
            </summary>
            <param name="one">One instance to compare.</param>
            <param name="two">The other instance to compare.</param>
            <returns><see langword="true"/> if the two instances are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute.op_Inequality(OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute,OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute)">
            <summary>
            Determines if two <see cref="!:FindsByAttribute"/> instances are unequal.
            </summary>s
            <param name="one">One instance to compare.</param>
            <param name="two">The other instance to compare.</param>
            <returns><see langword="true"/> if the two instances are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute.op_GreaterThan(OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute,OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute)">
            <summary>
            Determines if one <see cref="!:FindsByAttribute"/> instance is greater than another.
            </summary>
            <param name="one">One instance to compare.</param>
            <param name="two">The other instance to compare.</param>
            <returns><see langword="true"/> if the first instance is greater than the second; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute.op_LessThan(OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute,OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute)">
            <summary>
            Determines if one <see cref="!:FindsByAttribute"/> instance is less than another.
            </summary>
            <param name="one">One instance to compare.</param>
            <param name="two">The other instance to compare.</param>
            <returns><see langword="true"/> if the first instance is less than the second; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an 
            integer that indicates whether the current instance precedes, follows, or occurs 
            in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A value that indicates the relative order of the objects being compared. The return value has these meanings:
            <list type="table">
            <listheader>Value</listheader><listheader>Meaning</listheader>
            <item><description>Less than zero</description><description>This instance precedes <paramref name="obj"/> in the sort order.</description></item>
            <item><description>Zero</description><description>This instance occurs in the same position in the sort order as <paramref name="obj"/>.</description></item>
            <item><description>Greater than zero</description><description>This instance follows <paramref name="obj"/> in the sort order. </description></item>
            </list>
            </returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object">Object</see> is equal 
            to the current <see cref="T:System.Object">Object</see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object">Object</see> to compare with the 
            current <see cref="T:System.Object">Object</see>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:System.Object">Object</see>
            is equal to the current <see cref="T:System.Object">Object</see>; otherwise,
            <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object">Object</see>.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute.Priority">
            <summary>
            Gets or sets a value indicating where this attribute should be evaluated relative to other instances
            of this attribute decorating the same class member.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute.ID">
            <summary>
            Sets the target element id
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute.ClassName">
            <summary>
            Sets the target element class name
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute.TagName">
            <summary>
            Sets the target element tag name
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByMobileAttribute.XPath">
            <summary>
            Sets the target element xpath
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.Abstract.FindsByUIAutomatorsAttribute.Accessibility">
            <summary>
            Sets the target accessibility
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByAndroidUIAutomatorAttribute.AndroidUIAutomator">
            <summary>
            Sets the target UI automator locator
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByIOSUIAutomationAttribute.IosUIAutomation">
            <summary>
            Sets the target UI automation locator
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsBySelendroidAttribute.LinkText">
            <summary>
            Sets the target element link text.
            This locator is supported by Selendroid
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsBySelendroidAttribute.PartialLinkText">
            <summary>
            Sets the target element partial link text
            This locator is supported by Selendroid
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsBySelendroidAttribute.Name">
            <summary>
            Sets the target element name
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Appium.PageObjects.Attributes.MobileFindsByAllAttribute">
            <summary>
            Marks elements to indicate that found elements should match the criteria of
            all <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByAndroidUIAutomatorAttribute"/> or <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByIOSUIAutomationAttribute"/>
            or <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsBySelendroidAttribute"/> on the field or property.
            </summary>
            <remarks>
            <para>
            When used with a set of <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.MobileFindsByAllAttribute"/>, all criteria must be
            matched to be returned. The criteria are used in sequence according to the
            Priority property. Note that the behavior when setting multiple
            <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByAndroidUIAutomatorAttribute"/> or 
            <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByIOSUIAutomationAttribute"/> or <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsBySelendroidAttribute"/> Priority properties to the same value, or not
            specifying a Priority value, is undefined.
            </para>
            <para>
            <code>
            // Will find the element with the class "SomeClass" that also has an ID
            // attribute matching "elementId".
            [MobileFindsByAll(Android = true)]
            [FindsByAndroidUIAutomator(Class = "SomeClass", Priority = 0)]
            [FindsByAndroidUIAutomator(Id = "elementId", Priority = 1)]
            public IWebElement thisElement;
            </code>
            </para>
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.MobileFindsByAllAttribute.Android">
            <summary>
            If this property is "true" then target elements should match the criteria of
            all <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByAndroidUIAutomatorAttribute"/>  on the field or property.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.MobileFindsByAllAttribute.IOS">
            <summary>
            If this property is "true" then target elements should match the criteria of
            all <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByIOSUIAutomationAttribute"/>  on the field or property.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.MobileFindsByAllAttribute.Selendroid">
            <summary>
            If this property is "true" then target elements should match the criteria of
            all <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsBySelendroidAttribute"/>  on the field or property.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.MobileFindsByAllAttribute.Windows">
            <summary>
            If this property is "true" then target elements should match the criteria of
            all <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByWindowsAutomationAttribute"/>  on the field or property.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Appium.PageObjects.Attributes.MobileFindsBySequenceAttribute">
            <summary>
            Marks elements to indicate that each <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByAndroidUIAutomatorAttribute"/> or 
            <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByIOSUIAutomationAttribute"/> or <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsBySelendroidAttribute"/> on the field or
            property should be used in sequence to find the appropriate element.
            </summary>
            <remarks>
            <para>
            When used with a set of <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByAndroidUIAutomatorAttribute"/> or 
            <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByIOSUIAutomationAttribute"/> or <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsBySelendroidAttribute"/>, the criteria are used
            in sequence according to the Priority property to find child elements. Note that
            the behavior when setting multiple <see cref="!:FindsByAttribute"/> Priority
            properties to the same value, or not specifying a Priority value, is undefined.
            </para>
            <para>
            <code>
            // Will find the element with the ID attribute matching "elementId", then will find
            // a child element with the ID attribute matching "childElementId".
            [MobileFindsBySequence(Android = true)]
            [FindsByAndroidUIAutomator(Id = "elementId", Priority = 0)]
            [FindsByAndroidUIAutomator(Id = "childElementId", Priority = 1)]
            public IWebElement targetElement;
            </code>
            </para>
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.MobileFindsBySequenceAttribute.Android">
            <summary>
            If this property is "true" then each <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByAndroidUIAutomatorAttribute"/>  on the field or
            property will be used in sequence to find the appropriate element.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.MobileFindsBySequenceAttribute.IOS">
            <summary>
            If this property is "true" then each <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByIOSUIAutomationAttribute"/>  on the field or
            property will be used in sequence to find the appropriate element.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.MobileFindsBySequenceAttribute.Selendroid">
            <summary>
            If this property is "true" then each <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsBySelendroidAttribute"/>  on the field or
            property will be used in sequence to find the appropriate element.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.PageObjects.Attributes.MobileFindsBySequenceAttribute.Windows">
            <summary>
            If this property is "true" then each <see cref="T:OpenQA.Selenium.Appium.PageObjects.Attributes.FindsByWindowsAutomationAttribute"/>  on the field or
            property will be used in sequence to find the appropriate element.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Appium.PageObjects.TimeOutDuration">
            <summary>
            This class stores the time of the waiting for elements.
            It also allows to change this duration in runtime.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.PageObjects.WebDriverUnpackUtility.UnpackWebdriver(OpenQA.Selenium.ISearchContext)">
            <summary>
            This method returns a wrapped IWebDriver instance 
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenQA.Selenium.Appium.ScreenOrientationExtensions">
            <summary>
            Extension methods to convert to/from ScreenOrientation enum
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ScreenOrientationExtensions.JSONWireProtocolString(OpenQA.Selenium.ScreenOrientation)">
            <summary>
            Converts the Screen Orientation to the string needed by the JSON Wire Protocol
            </summary>
            <param name="orientation"></param>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ScreenOrientationExtensions.ConvertToScreenOrientation(System.String)">
            <summary>
            Converts the string to a screen orientation if possible, else throws ArgumentOutOfRangeException 
            </summary>
            <param name="orientation"></param>
            <returns>Screen Orientation</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ScreenRecording.BaseScreenRecordingOptions`1.WithUploadOptions(OpenQA.Selenium.Appium.ScreenRecording.ScreenRecordingUploadOptions)">
            <summary>
            Upload options set for the recorded screen capture.
            </summary>
            <param name="uploadOptions">Upload options</param>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ScreenRecording.BaseScreenRecordingOptions`1.GetParameters">
            <summary>
            Get all setted parameters
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ScreenRecording.BaseStartScreenRecordingOptions`1.WithTimeLimit(System.TimeSpan)">
            <summary>
            The maximum recording time.
            </summary>
            <param name="timeLimit">The actual time limit of the recorded video.</param>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ScreenRecording.BaseStartScreenRecordingOptions`1.EnableForcedRestart">
            <summary>
            Whether to ignore the result of previous capture and start a new recording
            immediately. By default the endpoint will try to catch and return the result of
            the previous capture if it's still available.
            </summary>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ScreenRecording.BaseStartScreenRecordingOptions`1.WithUploadOptions(OpenQA.Selenium.Appium.ScreenRecording.ScreenRecordingUploadOptions)">
             <summary>
             The remotePath upload option is the path to the remote location,
             where the resulting video should be uploaded.
             The following protocols are supported: http/https (multipart), ftp.
            
             Missing value (the default setting) means the content of the resulting
             file should be encoded as Base64 and passed as the endpoint response value, but
             an exception will be thrown if the generated media file is too big to
             fit into the available process memory.
             This option only has an effect if there is a screen recording session in progress
             and forced restart is not enabled (the default setting).
             </summary>
             <param name="uploadOptions">Upload options</param>
             <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ScreenRecording.BaseStopScreenRecordingOptions`1.WithUploadOptions(OpenQA.Selenium.Appium.ScreenRecording.ScreenRecordingUploadOptions)">
            <summary>
            The remotePath upload option is the path to the remote location,
            where the resulting video should be uploaded.
            The following protocols are supported: http/https (multipart), ftp.
            Missing value (the default setting) means the content of resulting
            file should be encoded as Base64 and passed as the endpoint response value, but
            an exception will be thrown if the generated media file is too big to
            fit into the available process memory.
            </summary>
            <param name="uploadOptions">Upload options</param>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ScreenRecording.ScreenRecordingUploadOptions.WithRemotePath(System.String)">
            <summary>
            The path to the remote location, where the resulting video should be uploaded.
            </summary>
            <param name="remotePath">The path to a writable remote location.</param>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ScreenRecording.ScreenRecordingUploadOptions.WithAuthCredentials(System.String,System.String)">
            <summary>
            Sets the credentials for remote ftp/http authentication (if needed).
            This option only has an effect if remotePath is provided.
            </summary>
            <param name="user">The name of the user for the remote authentication.</param>
            <param name="pass">The password for the remote authentication.</param>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ScreenRecording.ScreenRecordingUploadOptions.WithHttpMethod(OpenQA.Selenium.Appium.ScreenRecording.ScreenRecordingUploadOptions.RequestMethod)">
            <summary>
            Sets the method name for http(s) upload. PUT is used by default.
            This option only has an effect if remotePath is provided.
            </summary>
            <param name="method">method The HTTP method name.</param>
            <returns>self instance for chaining.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.ScreenRecording.ScreenRecordingUploadOptions.GetParameters">
            <summary>
            Get all setted parameters
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumLocalService.BuildDefaultService">
            <summary>
            Creates an instance of AppiumLocalService without special settings
            </summary>
            <returns>An instance of AppiumLocalService without special settings</returns>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Service.AppiumLocalService.ServiceUrl">
            <summary>
            The base URL for the managed appium server.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Appium.Service.AppiumLocalService.OutputDataReceived">
            <summary>
            Event that can be used to capture the output of the service
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumLocalService.Start">
            <summary>
            Starts the defined appium server
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumLocalService.Dispose">
            <summary>
            Stops this service if it is currently running.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Appium.Service.AppiumLocalService.IsRunning">
            <summary>
            Is the defined appium server being run or not
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Service.AppiumServiceBuilder">
            <summary>
            This thing accepts parameters and builds instances of AppiumLocalService
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumServiceBuilder.WithArguments(OpenQA.Selenium.Appium.Service.Options.OptionCollector)">
            <summary>
            This method specifies Appium server options
            </summary>
            <param name="serverOptions">A collection of Appium server options</param>
            <returns>Self reference</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumServiceBuilder.WithAppiumJS(System.IO.FileInfo)">
            <summary>
            This method defines the desired Appium server binary
            </summary>
            <param name="appiumJS">Is a file path to the desired appium.js file</param>
            <returns>Self-reference</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumServiceBuilder.WithIPAddress(System.String)">
            <summary>
            This method defines the IP Address to listen on
            </summary>
            <param name="ipAddress">the IP Address to listen on</param>
            <returns>Self-reference</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumServiceBuilder.WithStartUpTimeOut(System.TimeSpan)">
            <summary>
            Sets time value for the service starting up
            </summary>
            <param name="startUpTimeout">a time value for the service starting up</param>
            <returns>self-reference</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumServiceBuilder.WithNodeArguments(System.String[])">
            <summary>
            Command line arguments that will be passed to NodeJS when it starts up.
            </summary>
            <param name="arguments">
            A collection of raw string arguments that will be passed to NodeJS.
            Spaces will be automatically added between arguments. You are responsible for
            properly escaping any special characters for your operating system.
            Arguments cannot be null, empty strings, or only whitespace.
            </param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
            <returns></returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumServiceBuilder.UsingDriverExecutable(System.IO.FileInfo)">
            <summary>
            Sets which Node.js the builder will use.
            </summary>
            <param name="nodeJSExecutable">The executable Node.js to use.</param>
            <returns>self-reference</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumServiceBuilder.UsingPort(System.Int32)">
            <summary>
            Sets which port the appium server should be started on. A value of 0 indicates that any
            free port may be used.
            </summary>
            <param name="port">The port to use; must be non-negative.</param>
            <returns>self-reference</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumServiceBuilder.UsingAnyFreePort">
            <summary>
            Configures the appium server to start on any available port.
            </summary>
            <returns>self-reference</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumServiceBuilder.WithEnvironment(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Defines the environment for the launched appium server.
            </summary>
            <param name="environment">A dictionary of the environment variables to launch the
                appium server with.</param>
            <returns>self-reference</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumServiceBuilder.WithLogFile(System.IO.FileInfo)">
            <summary>
            Configures the appium server to write log to the given file.
            </summary>
            <param name="logFile">A file to write log to.</param>
            <returns>self-reference</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.AppiumServiceBuilder.Build">
            <summary>
            This method builds an instance of AppiumLocalService using defined parameters
            </summary>
            <returns>an instance of AppiumLocalService built using defined parameters</returns>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Service.AppiumServiceConstants.AppiumBinaryPath">
            <summary>
            The environmental variable used to define
            the path to executable appium.js (1.4.x and lower) or
            main.js (1.5.x and higher)
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Appium.Service.AppiumServiceConstants.NodeBinaryPath">
            <summary>
            The environmental variable used to define
            the path to executable NodeJS file (node.exe for WIN and
            node for Linux/MacOS X)
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Service.Options.AndroidOptionList">
            <summary>
             Here is the list of Android specific server arguments.
             All flags are optional, but some are required in conjunction with certain others.
             The full list is available here: http://appium.io/slate/en/master/?ruby#appium-server-arguments
             Android specific arguments are marked by (Android-only)
             </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.AndroidOptionList.BootstrapPort(System.String)">
            <summary>
             Port to use on device to talk to Appium<br/>
             Sample:<br/>
             --bootstrap-port 4724
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.AndroidOptionList.SelendroidPort(System.String)">
            <summary>
             Local port used for communication with Selendroid<br/>
             Sample:<br/>
             --selendroid-port 8080
            </summary>
            
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.AndroidOptionList.SuppressAdbKillServer">
            <summary>
             If set, prevents Appium from killing the adb server
             instance<br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.AndroidOptionList.ChromeDriverPort(System.String)">
            <summary>
             Port upon which ChromeDriver will run<br/>
             Sample:<br/>
             --chromedriver-port 9515
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.AndroidOptionList.ChromeDriverExecutable(System.String)">
            <summary>
             ChromeDriver executable full path
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList">
            <summary>
             Here is the list of common Appium server arguments.
             All flags are optional, but some are required in conjunction with certain others.
             The full list is available here: http://appium.io/slate/en/master/?ruby#appium-server-arguments
             </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.Shell(System.String)">
            <summary>
            Enter REPL mode
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.CallbackAddress(System.String)">
            <summary>
             callback IP Address (default: same as address) <br/>
             Sample <br/>
             --callback-address 127.0.0.1
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.CallbackPort(System.String)">
            <summary>
             callback port (default: same as port)<br/>
             Sample <br/>
             --callback-port 4723
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.OverrideSession">
            <summary>
             Enables session override (clobbering) <br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.PreLaunch">
            <summary>
             Pre-launch the application before allowing the first session (Requires –app and, for Android, –app-pkg and –app-activity) <br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.LogLevel(System.String)">
            <summary>
             The message log level to be shown <br/>
             Sample:<br/>
             --log-level debug
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.LogTimeStamp">
            <summary>
             Show timestamps in console output <br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.LocalTimezone">
            <summary>
             Use local timezone for timestamps <br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.LogNoColors">
            <summary>
             Don’t use colors in console output <br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.WebHook(System.String)">
            <summary>
             Also send log output to this HTTP listener <br/>
             Sample: <br/>
             --webhook localhost:9876
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.NodeConfig(System.String)">
            <summary>
             Configuration JSON file to register Appium with selenium grid<br/>
             Sample:<br/>
             --nodeconfig /abs/path/to/nodeconfig.json
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.RobotAddress(System.String)">
            <summary>
             IP Address of robot<br/>
             Sample:<br/>
             --robot-address 0.0.0.0
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.RobotPort(System.String)">
            <summary>
             Port for robot<br/>
             Sample: <br/>
             --robot-port 4242
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.ShowConfig">
            <summary>
             Show info about the Appium server configuration and exit<br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.NoPermsCheck">
            <summary>
             Bypass Appium’s checks to ensure we can read/write necessary files<br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.StrictCaps">
            <summary>
             Cause sessions to fail if desired caps are sent in that Appium does not
             recognize as valid for the selected device<br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.TMP(System.String)">
            <summary>
             Absolute path to directory Appium can use to manage temporary files, like
             built-in iOS apps it needs to move around. On *nix/Mac defaults to /tmp,
             on Windows defaults to C:\Windows\Temp<br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.DebugLogSpacing">
            <summary>
             Add exaggerated spacing in logs to help with visual inspection<br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.GeneralOptionList.AsyncTrace">
            <summary>
            Add long stack traces to log entries. Recommended for debugging only.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Appium.Service.Options.IOSOptionList">
            <summary>
             Here is the list of iOS specific server arguments.
             All flags are optional, but some are required in conjunction with certain others.
             The full list is available here: http://appium.io/slate/en/master/?ruby#appium-server-arguments
             Android specific arguments are marked by (IOS-only)
             </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.IOSOptionList.Ipa(System.String)">
            <summary>
             absolute path to compiled .ipa file
             Sample:<br/>
             --ipa /abs/path/to/my.ipa
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.IOSOptionList.BackEndRetries(System.String)">
            <summary>
             How many times to retry launching Instruments before saying it
             crashed or timed out<br/>
             Sample:<br/>
             --backend-retries 3
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.IOSOptionList.Safari">
            <summary>
             Use the safari app<br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.IOSOptionList.DefaultDevice">
            <summary>
             use the default simulator that instruments launches
             on its own<br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.IOSOptionList.ForceIPhoneSimulator">
            <summary>
             Use the iPhone Simulator no matter what the app wants<br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.IOSOptionList.ForceIPadSimulator">
            <summary>
             Use the iPad Simulator no matter what the app wants<br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.IOSOptionList.TraceTemplate(System.String)">
            <summary>
             .tracetemplate file to use with Instruments<br/>
             Sample:<br/>
             --tracetemplate /Users/me/Automation.tracetemplate
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.IOSOptionList.Intstruments(System.String)">
            <summary>
             custom path to the instruments commandline tool<br/>
             Sample:<br/>
             --instruments /path/to/instruments
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.IOSOptionList.IsolateSimDevice">
            <summary>
             Xcode 6 has a bug on some platforms where a certain simulator can only be
             launched without error if all other simulator devices are first deleted.
             This option causes Appium to delete all devices other than the one being
             used by Appium. Note that this is a permanent deletion, and you are
             responsible for using simctl or xcode to manage the categories of devices
             used with Appium<br/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.IOSOptionList.TraceDirectory(System.String)">
            <summary>
             Absolute path to directory Appium use to save ios instruments traces,
             defaults to /appium-instruments<br/>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.IOSOptionList.WebkitDebugProxyPort(System.String)">
            <summary>
            Local port used for communication with ios-webkit-debug-proxy.
            Sample:<br/>
            --webkit-debug-proxy-port 27753
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.OptionCollector.AddArguments(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Adds an argument and its value
            </summary>
            <param name="arguments">is a structure where the first alement is a server argument and the second one
            is string value of the passed argument</param>
            <returns>self reference</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Service.Options.OptionCollector.AddCapabilities(OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Adds/merges server-specific capabilities
            </summary>
            <param name="options">is an instance of OpenQA.Selenium.Remote.AppiumOptions</param>
            <returns>the self-reference</returns>        
        </member>
        <member name="P:OpenQA.Selenium.Appium.Service.Options.OptionCollector.Arguments">
            <summary>
            Builds a sequence of server arguments
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Tizen.TizenDriver`1.#ctor(OpenQA.Selenium.Remote.ICommandExecutor,OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the TizenDriver class
            </summary>
            <param name="commandExecutor">An <see cref="T:OpenQA.Selenium.Remote.ICommandExecutor"/> object which executes commands for the driver.</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Tizen.TizenDriver`1.#ctor(OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the TizenDriver class using Appium options
            </summary>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.Appium.AppiumOptions"/> object containing the Appium options of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Tizen.TizenDriver`1.#ctor(OpenQA.Selenium.Appium.AppiumOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the TizenDriver class using Appium options and command timeout
            </summary>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Tizen.TizenDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumServiceBuilder,OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the TizenDriver class using the AppiumServiceBuilder instance and Appium options
            </summary>
            <param name="builder"> object containing settings of the Appium local service which is going to be started</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Tizen.TizenDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumServiceBuilder,OpenQA.Selenium.Appium.AppiumOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the TizenDriver class using the AppiumServiceBuilder instance, Appium options and command timeout
            </summary>
            <param name="builder"> object containing settings of the Appium local service which is going to be started</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Tizen.TizenDriver`1.#ctor(System.Uri,OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the TizenDriver class using the specified remote address and Appium options
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4723/wd/hub).</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.Appium.AppiumOptions"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Tizen.TizenDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumLocalService,OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the TizenDriver class using the specified Appium local service and Appium options
            </summary>
            <param name="service">the specified Appium local service</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Tizen.TizenDriver`1.#ctor(System.Uri,OpenQA.Selenium.Appium.AppiumOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the TizenDriver class using the specified remote address, Appium options, and command timeout.
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4723/wd/hub).</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.Appium.AppiumOptions"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Tizen.TizenDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumLocalService,OpenQA.Selenium.Appium.AppiumOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the TizenDriver class using the specified Appium local service, Appium options, and command timeout.
            </summary>
            <param name="service">the specified Appium local service</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Tizen.TizenDriver`1.FindElementByTizenUIAutomation(System.String)">
            <summary>
            Finds the first of elements that match the Tizen UIAutomation selector supplied
            </summary>
            <param name="selector">a Tizen UIAutomation selector</param>
            <returns>IWebElement object so that you can interact that object</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Tizen.TizenDriver`1.FindElementsByTizenUIAutomation(System.String)">
            <summary>
            Finds a list of elements that match the Tizen UIAutomation selector supplied
            </summary>
            <param name="selector">a Tizen UIAutomation selector</param>
            <returns>ReadOnlyCollection of IWebElement objects so that you can interact with those objects</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Tizen.TizenElement.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver,System.String)">
            <summary>
            Initializes a new instance of the TizenElement class.
            </summary>
            <param name="parent">Driver in use.</param>
            <param name="id">ID of the element.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Windows.WindowsDriver`1.#ctor(OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the WindowsDriver class using Appium options
            </summary>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.Appium.AppiumOptions"/> object containing the Appium options of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Windows.WindowsDriver`1.#ctor(OpenQA.Selenium.Appium.AppiumOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the WindowsDriver class using Appium options and command timeout
            </summary>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Windows.WindowsDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumServiceBuilder,OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the WindowsDriver class using the AppiumServiceBuilder instance and Appium options
            </summary>
            <param name="builder"> object containing settings of the Appium local service which is going to be started</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Windows.WindowsDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumServiceBuilder,OpenQA.Selenium.Appium.AppiumOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the WindowsDriver class using the AppiumServiceBuilder instance, Appium options and command timeout
            </summary>
            <param name="builder"> object containing settings of the Appium local service which is going to be started</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Windows.WindowsDriver`1.#ctor(System.Uri,OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the WindowsDriver class using the specified remote address and Appium options
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4723/wd/hub).</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.Appium.AppiumOptions"/> object containing the Appium options.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Windows.WindowsDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumLocalService,OpenQA.Selenium.Appium.AppiumOptions)">
            <summary>
            Initializes a new instance of the WindowsDriver class using the specified Appium local service and Appium options
            </summary>
            <param name="service">the specified Appium local service</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Windows.WindowsDriver`1.#ctor(System.Uri,OpenQA.Selenium.Appium.AppiumOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the WindowsDriver class using the specified remote address, Appium options, and command timeout.
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4723/wd/hub).</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.Appium.AppiumOptions"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Windows.WindowsDriver`1.#ctor(OpenQA.Selenium.Appium.Service.AppiumLocalService,OpenQA.Selenium.Appium.AppiumOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the WindowsDriver class using the specified Appium local service, Appium options, and command timeout.
            </summary>
            <param name="service">the specified Appium local service</param>
            <param name="AppiumOptions">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the Appium options.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Windows.WindowsDriver`1.FindElementByWindowsUIAutomation(System.String)">
            <summary>
            Finds the first of elements that match the Windows UIAutomation selector supplied
            </summary>
            <param name="selector">a Windows UIAutomation selector</param>
            <returns>IWebElement object so that you can interact that object</returns>
        </member>
        <member name="M:OpenQA.Selenium.Appium.Windows.WindowsDriver`1.FindElementsByWindowsUIAutomation(System.String)">
            <summary>
            Finds a list of elements that match the Windows UIAutomation selector supplied
            </summary>
            <param name="selector">a Windows UIAutomation selector</param>
            <returns>ReadOnlyCollection of IWebElement objects so that you can interact with those objects</returns>
        </member>
        <member name="T:Appium.Interfaces.Generic.SearchContext.IGenericFindsByClassName`1">
            <summary>
            Defines the interface through which the user finds elements by their CSS class.
            </summary>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByClassName`1.FindElementByClassName(System.String)">
            <summary>
            Finds the first element matching the specified CSS class.
            </summary>
            <param name="className">The CSS class to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByClassName`1.FindElementsByClassName(System.String)">
            <summary>
            Finds all elements matching the specified CSS class.
            </summary>
            <param name="className">The CSS class to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:Appium.Interfaces.Generic.SearchContext.IGenericFindsByCssSelector`1">
            <summary>
            Defines the interface through which the user finds elements by their cascading style sheet (CSS) selector.
            </summary>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByCssSelector`1.FindElementByCssSelector(System.String)">
            <summary>
            Finds the first element matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The id to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByCssSelector`1.FindElementsByCssSelector(System.String)">
            <summary>
            Finds all elements matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The CSS selector to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:Appium.Interfaces.Generic.SearchContext.IGenericFindsById`1">
            <summary>
            Defines the interface through which the user finds elements by their ID.
            </summary>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsById`1.FindElementById(System.String)">
            <summary>
            Finds the first element matching the specified id.
            </summary>
            <param name="id">The id to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsById`1.FindElementsById(System.String)">
            <summary>
            Finds all elements matching the specified id.
            </summary>
            <param name="id">The id to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:Appium.Interfaces.Generic.SearchContext.IGenericFindsByLinkText`1">
            <summary>
            Defines the interface through which the user finds elements by their link text.
            </summary>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByLinkText`1.FindElementByLinkText(System.String)">
            <summary>
            Finds the first element matching the specified link text.
            </summary>
            <param name="linkText">The link text to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByLinkText`1.FindElementsByLinkText(System.String)">
            <summary>
            Finds all elements matching the specified link text.
            </summary>
            <param name="linkText">The link text to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:Appium.Interfaces.Generic.SearchContext.IGenericFindsByName`1">
            <summary>
            Defines the interface through which the user finds elements by their name.
            </summary>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByName`1.FindElementByName(System.String)">
            <summary>
            Finds the first element matching the specified name.
            </summary>
            <param name="name">The name to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByName`1.FindElementsByName(System.String)">
            <summary>
            Finds all elements matching the specified name.
            </summary>
            <param name="name">The name to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:Appium.Interfaces.Generic.SearchContext.IGenericFindsByPartialLinkText`1">
            <summary>
            Defines the interface through which the user finds elements by a partial match on their link text.
            </summary>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByPartialLinkText`1.FindElementByPartialLinkText(System.String)">
            <summary>
            Finds the first element matching the specified partial link text.
            </summary>
            <param name="partialLinkText">The partial link text to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByPartialLinkText`1.FindElementsByPartialLinkText(System.String)">
            <summary>
            Finds all elements matching the specified partial link text.
            </summary>
            <param name="partialLinkText">The partial link text to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:Appium.Interfaces.Generic.SearchContext.IGenericFindsByTagName`1">
            <summary>
            Defines the interface through which the user finds elements by their tag name.
            </summary>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByTagName`1.FindElementByTagName(System.String)">
            <summary>
            Finds the first element matching the specified tag name.
            </summary>
            <param name="tagName">The tag name to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByTagName`1.FindElementsByTagName(System.String)">
            <summary>
            Finds all elements matching the specified tag name.
            </summary>
            <param name="tagName">The tag name to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:Appium.Interfaces.Generic.SearchContext.IGenericFindsByXPath`1">
            <summary>
            Defines the interface through which the user finds elements by XPath.
            </summary>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByXPath`1.FindElementByXPath(System.String)">
            <summary>
            Finds the first element matching the specified XPath query.
            </summary>
            <param name="xpath">The XPath query to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericFindsByXPath`1.FindElementsByXPath(System.String)">
            <summary>
            Finds all elements matching the specified XPath query.
            </summary>
            <param name="xpath">The XPath query to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:Appium.Interfaces.Generic.SearchContext.IGenericSearchContext`1">
            <summary>
            Defines the interface used to search for elements.
            </summary>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericSearchContext`1.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds the first <see cref="T:OpenQA.Selenium.IWebElement"/> using the given method. 
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>The first matching <see cref="T:OpenQA.Selenium.IWebElement"/> on the current context.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException">If no element matches the criteria.</exception>
        </member>
        <member name="M:Appium.Interfaces.Generic.SearchContext.IGenericSearchContext`1.FindElements(OpenQA.Selenium.By)">
            <summary>
            Finds all <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> within the current context 
            using the given mechanism.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.</returns>
        </member>
    </members>
</doc>
